type Post {
  # identifier of the post. This is unique
  id: Int
  # Title of the post
  title: String
  # The html content of the post
  html: String
  # The md content of the post
  md: String
  # Small description of the post
  excerpt: String
  # Draft made to the post in md format
  md_draft: String
  # Slug
  slug: String
  # Cover image
  cover_image: Image
  # Is the post featured
  featured: Boolean
  # total reading time
  reading_time: String
  status: String
  type: PostTypes
  createdAt: Date
  publishedAt: Date
  scheduledAt: Date
}

enum PostStatusOptions {
  publish
  draft
  trash
}

input PostFilters {
  id: Int
  slug: String
  featured: Boolean
  previewHash: String
  status: PostStatusOptions
}

enum PostTypes {
  post
  page
}

enum SortBy {
  ASC
  DESC
}

input PostsFilters {
  id: Int
  type: PostTypes
  slug: String
  featured: Boolean
  previewHash: String
  status: PostStatusOptions
  tagSlug: String
  tag: String
  author: String
  cursor: Int
  page: Int
  offset: Int
  limit: Int
  sortBy: SortBy
}

type Query {
  post(filters: PostFilters): Post!
  posts(filters: PostsFilters): [Post]!
}

input TagsInputType {
  id: Int
  name: String
  slug: String
}

input InputImage {
  src: String!
  width: Int
  height: Int
}

input TagsInputType {
  id: Int!
  name: String!
  slug: String!
}

input InputCreatePost {
  title: String
  html: String
  md: String
  # authorId: Int
  excerpt: String
  cover_image: InputImage
  type: PostTypes
  featured: Boolean
  status: PostStatusOptions
  slug: String
  # tags: [TagsInputType]
}

input InputUpdatePost {
  id: Int!
  title: String
  html: String
  md: String
  authorId: Int
  featured: Boolean
  excerpt: String
  cover_image: InputImage
  publishedAt: Date
  scheduledAt: Date
  updatedAt: Date
  type: PostTypes
  status: PostStatusOptions
  slug: String
  tags: [TagsInputType!]
}

type Mutation {
  createPost(data: InputCreatePost): Response!

  updatePost(data: InputUpdatePost): Response!

  # deletePosts(ids: [Int!], deleteFromSystem: Boolean): Response!
}
