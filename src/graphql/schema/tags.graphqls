type Tags {
  id: Int!
  name: String!
  desc: String
  slug: String!
  posts: PostsResponse!
}

input TagsFilters {
  active: Boolean
  name: String
}

type EditTaxResponse {
  ok: Boolean!
}

type Query {
  tags(filters: TagsFilters): [Tags!]!
}

type TagsError implements LetterpadError {
  message: String!
}

union UpdateTagsResponse = EditTaxResponse | TagsError

input InputTags {
  id: Int!
  name: String
  desc: String
  slug: String
}

type Mutation {
  updateTags(data: InputTags): UpdateTagsResponse!

  # deleteTags(id: Int!): EditTaxResponse!
}
