# import Partial from './partial.graphql'

query Post($filters: PostFilters) {
  post(filters: $filters) {
    ... on Post {
      ...Partial
      author {
        name
        avatar
        social {
          github
          twitter
          instagram
        }
        bio
      }
      tags {
        id
        name
        desc
        slug
      }
    }

    ... on PostError {
      message
    }
  }
}

query Posts($filters: PostsFilters) {
  posts(filters: $filters) {
    ... on PostsNode {
      count
      rows {
        ...Partial
        author {
          name
          social {
            github
            twitter
            instagram
          }
          bio
        }
        tags {
          id
          name
          desc
          slug
        }
      }
    }

    ... on PostError {
      message
    }
  }
}

query Media($filters: MediaFilters) {
  media(filters: $filters) {
    count
    rows {
      id
      url
      authorId
      createdAt
      name
      description
      width
      height
    }
  }
}

query Me {
  me {
    ... on Author {
      id
      name
      social {
        github
        twitter
        instagram
        facebook
      }
      email
      bio
      avatar
    }
    ... on AuthorNotFoundError {
      message
    }
  }
}

query Tags {
  tags {
    ... on TagsNode {
      rows {
        name
        id
        desc
        slug
        posts {
          ... on PostsNode {
            count
            rows {
              id
            }
          }
        }
      }
    }
    ... on TagsError {
      message
    }
  }
}

query Stats {
  stats {
    posts {
      published
      drafts
    }
    pages {
      published
      drafts
    }
    tags
    media
  }
}

mutation UpdateAuthor($author: InputAuthor!) {
  updateAuthor(author: $author) {
    ok
    errors {
      path
      message
    }
    data {
      name
      social {
        github
        twitter
        instagram
        facebook
      }
      bio
      avatar
    }
  }
}

mutation Login($data: LoginData) {
  login(data: $data) {
    status
    data {
      id
      name
      email
      role
      avatar
      permissions
    }
  }
}

mutation UpdateTags($data: InputTags) {
  updateTags(data: $data) {
    ... on EditTaxResponse {
      ok
    }
    ... on TagsError {
      message
    }
  }
}

mutation DeleteTags($id: Int!) {
  deleteTags(id: $id) {
    ... on DeleteTagsResult {
      ok
    }
    ... on TagsError {
      message
    }
  }
}

query settings {
  settings {
    site_title
    site_tagline
    site_email
    site_url
    site_footer
    site_description
    subscribe_embed
    social_twitter
    social_facebook
    social_instagram
    social_github
    displayAuthorInfo
    cloudinary_key
    cloudinary_name
    cloudinary_secret
    client_token
    menu {
      label
      original_name
      slug
      type
    }
    css
    google_analytics
    locale
    theme
    disqus_id
    banner {
      src
      width
      height
    }
    site_logo {
      src
      width
      height
    }
    site_favicon {
      src
      width
      height
    }
  }
}

mutation UpdateOptions($options: [OptionInputType!]!) {
  updateOptions(options: $options) {
    site_title
    site_tagline
    site_email
    site_url
    site_footer
    site_description
    subscribe_embed
    social_twitter
    social_facebook
    social_instagram
    social_github
    displayAuthorInfo
    cloudinary_key
    cloudinary_name
    cloudinary_secret
    menu {
      label
      original_name
      slug
      type
    }
    css
    google_analytics
    locale
    theme
    disqus_id
    banner {
      src
      width
      height
    }
    site_logo {
      src
      width
      height
    }
    site_favicon {
      src
      width
      height
    }
  }
}
