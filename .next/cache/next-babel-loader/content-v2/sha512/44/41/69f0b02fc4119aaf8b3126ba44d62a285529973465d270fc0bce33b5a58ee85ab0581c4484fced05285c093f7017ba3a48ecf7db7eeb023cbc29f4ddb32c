{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/components/file-explorer/InfiniteScrollList.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nvar InfiniteScrollList = function InfiniteScrollList(_ref) {\n  var data = _ref.data,\n      count = _ref.count,\n      loadMore = _ref.loadMore;\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(InfiniteScroll, {\n    height: 400,\n    dataLength: data.length,\n    next: loadMore,\n    hasMore: data.length < count,\n    loader: __jsx(LoadingOutlined, {\n      spin: true,\n      style: {\n        padding: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"image-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, data)));\n};\n\n_c = InfiniteScrollList;\nexport default InfiniteScrollList;\nvar Container = styled.div.withConfig({\n  displayName: \"InfiniteScrollList__Container\"\n})([\".image-grid{display:grid;grid-gap:10px;grid-template-columns:repeat(auto-fill,minmax(180px,1fr));grid-auto-rows:minmax(50px,auto);.image-item:nth-child(5n){grid-column-end:span 2;}img{display:flex;width:100%;height:100%;object-fit:cover;}}\"]);\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InfiniteScrollList\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/components/file-explorer/InfiniteScrollList.tsx"],"names":["InfiniteScroll","React","styled","LoadingOutlined","InfiniteScrollList","data","count","loadMore","length","padding","Container","div"],"mappings":";;;;AAAA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAIK;AAAA,MAH9BC,IAG8B,QAH9BA,IAG8B;AAAA,MAF9BC,KAE8B,QAF9BA,KAE8B;AAAA,MAD9BC,QAC8B,QAD9BA,QAC8B;AAC9B,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,UAAU,EAAEF,IAAI,CAACG,MAFnB;AAGE,IAAA,IAAI,EAAED,QAHR;AAIE,IAAA,OAAO,EAAEF,IAAI,CAACG,MAAL,GAAcF,KAJzB;AAKE,IAAA,MAAM,EAAE,MAAC,eAAD;AAAiB,MAAA,IAAI,MAArB;AAAsB,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BJ,IAA7B,CAPF,CADF,CADF;AAaD,CAlBD;;KAAMD,kB;AAoBN,eAAeA,kBAAf;AAEA,IAAMM,SAAS,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA,uPAAf;MAAMD,S","sourcesContent":["import InfiniteScroll from \"react-infinite-scroll-component\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\ninterface IInfiniteScrollListProps {\n  data: any;\n  count: number;\n  loadMore: () => void;\n}\n\nconst InfiniteScrollList = ({\n  data,\n  count,\n  loadMore,\n}: IInfiniteScrollListProps) => {\n  return (\n    <Container>\n      <InfiniteScroll\n        height={400}\n        dataLength={data.length}\n        next={loadMore}\n        hasMore={data.length < count}\n        loader={<LoadingOutlined spin style={{ padding: 40 }} />}\n      >\n        <div className=\"image-grid\">{data}</div>\n      </InfiniteScroll>\n    </Container>\n  );\n};\n\nexport default InfiniteScrollList;\n\nconst Container = styled.div`\n  .image-grid {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n    grid-auto-rows: minmax(50px, auto);\n\n    .image-item:nth-child(5n) {\n      grid-column-end: span 2;\n    }\n\n    img {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}