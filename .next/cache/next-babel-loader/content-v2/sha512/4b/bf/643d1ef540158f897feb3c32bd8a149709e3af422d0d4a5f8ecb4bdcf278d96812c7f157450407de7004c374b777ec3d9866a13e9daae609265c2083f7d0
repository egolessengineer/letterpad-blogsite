{"ast":null,"code":"import \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\n\nvar _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/components/layouts/ThemeSwitcher.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport nextConfig from \"next.config\";\nimport { useEffect, useState } from \"react\";\n\nvar ThemeSwitcher = function ThemeSwitcher() {\n  _s();\n\n  var _useState = useState(localStorage.theme || \"light\"),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  useEffect(function () {\n    if (localStorage.theme) {\n      setTheme(localStorage.theme);\n    }\n\n    setTimeout(function () {\n      switchTheme(localStorage.theme || theme);\n    }, 0);\n  }, []);\n\n  var switchTheme = function switchTheme(color) {\n    ThemeSwitcher[\"switch\"](color);\n    setTheme(color);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: \"0px\",\n      padding: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(_Switch, {\n    checkedChildren: \"\\uD83D\\uDD06\",\n    unCheckedChildren: \"\\u263D\",\n    checked: theme === \"dark\",\n    size: \"small\",\n    onChange: function onChange(checked) {\n      return switchTheme(checked ? \"dark\" : \"light\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ThemeSwitcher, \"CsKzW6WCW6M05fxXhgVQzQAD2TE=\");\n\n_c = ThemeSwitcher;\n\nThemeSwitcher[\"switch\"] = function (color) {\n  var $theme = document.querySelector(\"#theme\");\n\n  if (color === \"dark\") {\n    $theme === null || $theme === void 0 ? void 0 : $theme.setAttribute(\"href\", \"\".concat(nextConfig.basePath, \"/css/antd.dark.css\"));\n  } else {\n    $theme === null || $theme === void 0 ? void 0 : $theme.setAttribute(\"href\", \"\".concat(nextConfig.basePath, \"/css/antd.css\"));\n  }\n\n  localStorage.theme = color;\n};\n\nexport default ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/components/layouts/ThemeSwitcher.tsx"],"names":["nextConfig","useEffect","useState","ThemeSwitcher","localStorage","theme","setTheme","setTimeout","switchTheme","color","position","bottom","padding","checked","$theme","document","querySelector","setAttribute","basePath"],"mappings":";;;;;;;;;AACA,OAAOA,UAAP,MAAuB,aAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACAD,QAAQ,CAACE,YAAY,CAACC,KAAb,IAAsB,OAAvB,CADR;AAAA,MACnBA,KADmB;AAAA,MACZC,QADY;;AAG1BL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,YAAY,CAACC,KAAjB,EAAwB;AACtBC,MAAAA,QAAQ,CAACF,YAAY,CAACC,KAAd,CAAR;AACD;;AACDE,IAAAA,UAAU,CAAC,YAAM;AACfC,MAAAA,WAAW,CAACJ,YAAY,CAACC,KAAb,IAAsBA,KAAvB,CAAX;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAmB;AACrCN,IAAAA,aAAa,UAAb,CAAqBM,KAArB;AACAH,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE,KAAhC;AAAuCC,MAAAA,OAAO,EAAE;AAAhD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,eAAe,EAAC,cADlB;AAEE,IAAA,iBAAiB,EAAC,QAFpB;AAGE,IAAA,OAAO,EAAEP,KAAK,KAAK,MAHrB;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAE,kBAAAQ,OAAO;AAAA,aAAIL,WAAW,CAACK,OAAO,GAAG,MAAH,GAAY,OAApB,CAAf;AAAA,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CA5BD;;GAAMV,a;;KAAAA,a;;AA8BNA,aAAa,UAAb,GAAuB,UAAAM,KAAK,EAAI;AAC9B,MAAMK,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;AACA,MAAIP,KAAK,KAAK,MAAd,EAAsB;AACpBK,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEG,YAAR,CAAqB,MAArB,YAAgCjB,UAAU,CAACkB,QAA3C;AACD,GAFD,MAEO;AACLJ,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEG,YAAR,CAAqB,MAArB,YAAgCjB,UAAU,CAACkB,QAA3C;AACD;;AACDd,EAAAA,YAAY,CAACC,KAAb,GAAqBI,KAArB;AACD,CARD;;AASA,eAAeN,aAAf","sourcesContent":["import { Switch } from \"antd\";\nimport nextConfig from \"next.config\";\nimport { useEffect, useState } from \"react\";\n\nconst ThemeSwitcher = () => {\n  const [theme, setTheme] = useState(localStorage.theme || \"light\");\n\n  useEffect(() => {\n    if (localStorage.theme) {\n      setTheme(localStorage.theme);\n    }\n    setTimeout(() => {\n      switchTheme(localStorage.theme || theme);\n    }, 0);\n  }, []);\n\n  const switchTheme = (color: string) => {\n    ThemeSwitcher.switch(color);\n    setTheme(color);\n  };\n\n  return (\n    <div style={{ position: \"absolute\", bottom: \"0px\", padding: \"20px\" }}>\n      <Switch\n        checkedChildren=\"ðŸ”†\"\n        unCheckedChildren=\"â˜½\"\n        checked={theme === \"dark\"}\n        size=\"small\"\n        onChange={checked => switchTheme(checked ? \"dark\" : \"light\")}\n      />\n    </div>\n  );\n};\n\nThemeSwitcher.switch = color => {\n  const $theme = document.querySelector(\"#theme\");\n  if (color === \"dark\") {\n    $theme?.setAttribute(\"href\", `${nextConfig.basePath}/css/antd.dark.css`);\n  } else {\n    $theme?.setAttribute(\"href\", `${nextConfig.basePath}/css/antd.css`);\n  }\n  localStorage.theme = color;\n};\nexport default ThemeSwitcher;\n"]},"metadata":{},"sourceType":"module"}