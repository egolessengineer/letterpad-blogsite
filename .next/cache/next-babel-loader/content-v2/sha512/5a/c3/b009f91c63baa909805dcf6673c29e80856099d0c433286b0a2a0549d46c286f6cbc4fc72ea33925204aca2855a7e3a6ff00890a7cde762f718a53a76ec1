{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport copydir from \"copy-dir\";\nimport generatePost from \"./contentGenerator\";\nimport mkdirp from \"mkdirp\";\nimport path from \"path\";\nimport posts from \"./posts\";\nimport { promisify } from \"util\";\nimport rimraf from \"rimraf\";\nimport { createAuthor } from \"../../../graphql/resolvers/author\";\nimport { ROLES } from \"../../../graphql/types\";\nvar mkdirpAsync = promisify(mkdirp);\nvar rimrafAsync = promisify(rimraf);\nvar copydirAsync = promisify(copydir); // All paths are relative to this file\n\nvar dataDir = \"../../../../data\";\nvar publicUploadsDir = \"../../../../public/uploads\";\nvar uploadsSourceDir = \"./uploads\";\n\nfunction absPath(p) {\n  return path.join(__dirname, p);\n}\n\nvar models;\nexport var seed = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_models) {\n    var folderCheck,\n        _yield$Promise$all,\n        _yield$Promise$all2,\n        tags,\n        _args = arguments;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            folderCheck = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;\n            models = _models;\n\n            if (!folderCheck) {\n              _context.next = 7;\n              break;\n            }\n\n            console.time(\"ensure data directories\");\n            _context.next = 6;\n            return Promise.all([mkdirpAsync(absPath(dataDir)), mkdirpAsync(absPath(publicUploadsDir))]);\n\n          case 6:\n            console.timeEnd(\"ensure data directories\");\n\n          case 7:\n            console.time(\"sync sequelize models\");\n            _context.next = 10;\n            return models.sequelize.sync({\n              force: true\n            });\n\n          case 10:\n            console.timeEnd(\"sync sequelize models\");\n\n            if (!folderCheck) {\n              _context.next = 18;\n              break;\n            }\n\n            // do some clean first. delete the uploads folder\n            console.time(\"sync uploads\"); //@ts-ignore\n\n            _context.next = 15;\n            return rimrafAsync(path.join(absPath(publicUploadsDir, \"*\")));\n\n          case 15:\n            _context.next = 17;\n            return copydirAsync(absPath(uploadsSourceDir), absPath(publicUploadsDir));\n\n          case 17:\n            console.timeEnd(\"sync uploads\");\n\n          case 18:\n            console.time(\"insert roles and permissions\");\n            _context.next = 21;\n            return insertRolePermData(models);\n\n          case 21:\n            console.timeEnd(\"insert roles and permissions\");\n            console.time(\"insert authors and Tags\");\n            _context.next = 25;\n            return insertAuthor();\n\n          case 25:\n            _context.next = 27;\n            return insertTags();\n\n          case 27:\n            console.timeEnd(\"insert authors and Tags\");\n            console.time(\"insert posts, media\");\n            _context.next = 31;\n            return Promise.all([models.Tags.findAll()]);\n\n          case 31:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 1);\n            tags = _yield$Promise$all2[0];\n            _context.next = 36;\n            return Promise.all(_toConsumableArray(posts.map(function (post) {\n              return insertPost(post, models, tags);\n            })));\n\n          case 36:\n            _context.next = 38;\n            return insertMedia();\n\n          case 38:\n            console.timeEnd(\"insert posts, settings, media\");\n\n          case 39:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function seed(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport function insertRolePermData(_x2) {\n  return _insertRolePermData.apply(this, arguments);\n}\n\nfunction _insertRolePermData() {\n  _insertRolePermData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(models) {\n    var _yield$Promise$all3, _yield$Promise$all4, MANAGE_OWN_POSTS, READ_ONLY_POSTS, MANAGE_ALL_POSTS, MANAGE_USERS, MANAGE_SETTINGS, admin, _admin, reviewer, _reviewer, reader, _reader, author, _author;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _author = function _author3() {\n              _author = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var role;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return models.Role.create({\n                          name: \"AUTHOR\"\n                        });\n\n                      case 2:\n                        role = _context5.sent;\n                        return _context5.abrupt(\"return\", role.addPermission(MANAGE_OWN_POSTS));\n\n                      case 4:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n              return _author.apply(this, arguments);\n            };\n\n            author = function _author2() {\n              return _author.apply(this, arguments);\n            };\n\n            _reader = function _reader3() {\n              _reader = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var role;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return models.Role.create({\n                          name: \"READER\"\n                        });\n\n                      case 2:\n                        role = _context4.sent;\n                        return _context4.abrupt(\"return\", role.addPermission(READ_ONLY_POSTS));\n\n                      case 4:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n              return _reader.apply(this, arguments);\n            };\n\n            reader = function _reader2() {\n              return _reader.apply(this, arguments);\n            };\n\n            _reviewer = function _reviewer3() {\n              _reviewer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var role;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return models.Role.create({\n                          name: \"REVIEWER\"\n                        });\n\n                      case 2:\n                        role = _context3.sent;\n                        return _context3.abrupt(\"return\", role.addPermission(MANAGE_ALL_POSTS));\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n              return _reviewer.apply(this, arguments);\n            };\n\n            reviewer = function _reviewer2() {\n              return _reviewer.apply(this, arguments);\n            };\n\n            _admin = function _admin3() {\n              _admin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                var role;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return models.Role.create({\n                          name: \"ADMIN\"\n                        });\n\n                      case 2:\n                        role = _context2.sent;\n                        return _context2.abrupt(\"return\", Promise.all([role.addPermission(READ_ONLY_POSTS), role.addPermission(MANAGE_ALL_POSTS), role.addPermission(MANAGE_USERS), role.addPermission(MANAGE_SETTINGS), role.addPermission(MANAGE_OWN_POSTS)]));\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _admin.apply(this, arguments);\n            };\n\n            admin = function _admin2() {\n              return _admin.apply(this, arguments);\n            };\n\n            _context6.next = 10;\n            return Promise.all([models.Permission.create({\n              name: \"MANAGE_OWN_POSTS\"\n            }), models.Permission.create({\n              name: \"READ_ONLY_POSTS\"\n            }), models.Permission.create({\n              name: \"MANAGE_ALL_POSTS\"\n            }), models.Permission.create({\n              name: \"MANAGE_USERS\"\n            }), models.Permission.create({\n              name: \"MANAGE_SETTINGS\"\n            })]);\n\n          case 10:\n            _yield$Promise$all3 = _context6.sent;\n            _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 5);\n            MANAGE_OWN_POSTS = _yield$Promise$all4[0];\n            READ_ONLY_POSTS = _yield$Promise$all4[1];\n            MANAGE_ALL_POSTS = _yield$Promise$all4[2];\n            MANAGE_USERS = _yield$Promise$all4[3];\n            MANAGE_SETTINGS = _yield$Promise$all4[4];\n            return _context6.abrupt(\"return\", Promise.all([admin(), reviewer(), reader(), author()]));\n\n          case 18:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _insertRolePermData.apply(this, arguments);\n}\n\nexport function insertAuthor() {\n  return _insertAuthor.apply(this, arguments);\n}\n\nfunction _insertAuthor() {\n  _insertAuthor = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n    var adminAuthor, demoAuthor;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            adminAuthor = createAuthor({\n              name: \"Admin\",\n              email: \"admin@admin.com\",\n              username: \"admin\",\n              password: \"admin\",\n              site_title: \"Admin Account\",\n              verified: true,\n              rolename: ROLES.ADMIN\n            });\n            demoAuthor = createAuthor({\n              name: \"Demo Author\",\n              email: \"demo@demo.com\",\n              username: \"demo\",\n              password: \"demo\",\n              site_title: \"Demo Account\",\n              social: {\n                twitter: \"https://twitter.com\",\n                facebook: \"https://facebook.com\",\n                github: \"https://github.com\",\n                instagram: \"https://instagram.com\"\n              },\n              verified: true,\n              bio: \"You can some information about yourself for the world to know you a little better.\",\n              avatar: \"https://images.unsplash.com/photo-1572478465144-f5f6573e8bfd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=120&q=80\",\n              rolename: ROLES.AUTHOR\n            });\n            return _context7.abrupt(\"return\", Promise.all([adminAuthor, demoAuthor]));\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _insertAuthor.apply(this, arguments);\n}\n\nexport function insertTags() {\n  return _insertTags.apply(this, arguments);\n}\n\nfunction _insertTags() {\n  _insertTags = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    var author, tags;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return models.Author.findOne({\n              where: {\n                username: \"demo\"\n              }\n            });\n\n          case 2:\n            author = _context8.sent;\n            tags = [{\n              name: \"Home\",\n              slug: \"home\",\n              desc: \"\"\n            }, {\n              name: \"first-post\",\n              slug: \"first-post\",\n              desc: \"\"\n            }];\n\n            if (!author) {\n              _context8.next = 6;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", Promise.all(_toConsumableArray(tags.map(function (tag) {\n              return author.createTag(tag);\n            }))));\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _insertTags.apply(this, arguments);\n}\n\nexport function insertPost(_x3, _x4, _x5) {\n  return _insertPost.apply(this, arguments);\n}\n\nfunction _insertPost() {\n  _insertPost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(params, models, tags) {\n    var _generatePost, md, html, promises, authorId, author, title, slug, post;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            // get author  // 1 or 2\n            _generatePost = generatePost(params.type), md = _generatePost.md, html = _generatePost.html;\n            promises = [];\n            authorId = 2;\n            _context9.next = 5;\n            return models.Author.findOne({\n              where: {\n                id: authorId\n              }\n            });\n\n          case 5:\n            author = _context9.sent;\n            title = params.type === \"post\" ? \"Welcome to Letterpad\" : \"Letterpad Typography\";\n            slug = title.toLocaleLowerCase().replace(/ /g, \"-\");\n            _context9.next = 10;\n            return models.Post.create({\n              title: title,\n              md: md,\n              html: html,\n              excerpt: \"You can use this space to write a small description about the topic. This will be helpful in SEO.\",\n              cover_image: params.cover_image,\n              authorId: authorId,\n              type: params.type,\n              status: params.status,\n              slug: slug,\n              createdAt: getDateTime(),\n              publishedAt: getDateTime(),\n              reading_time: \"5 mins\"\n            });\n\n          case 10:\n            post = _context9.sent;\n\n            if (!(author && post)) {\n              _context9.next = 15;\n              break;\n            }\n\n            promises = [author.addPost(post)];\n\n            if (params.type === \"post\") {\n              promises = [].concat(_toConsumableArray(promises), _toConsumableArray(tags.map(function (tag) {\n                return post.addTag(tag);\n              })));\n            }\n\n            return _context9.abrupt(\"return\", Promise.all(promises));\n\n          case 15:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _insertPost.apply(this, arguments);\n}\n\nexport function insertMedia() {\n  return _insertMedia.apply(this, arguments);\n}\n\nfunction _insertMedia() {\n  _insertMedia = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n    var author;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return models.Author.findOne({\n              where: {\n                id: 1\n              }\n            });\n\n          case 2:\n            author = _context10.sent;\n\n            if (!author) {\n              _context10.next = 8;\n              break;\n            }\n\n            _context10.next = 6;\n            return author.createMedia({\n              url: \"https://images.unsplash.com/photo-1473181488821-2d23949a045a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\",\n              name: \"Blueberries\",\n              width: 1350,\n              height: 900,\n              description: \"Write a description about this image. You never know how this image can break the internet\"\n            });\n\n          case 6:\n            _context10.next = 8;\n            return author.createMedia({\n              url: \"https://images.unsplash.com/photo-1524654458049-e36be0721fa2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80\",\n              width: 1350,\n              height: 900,\n              name: \"I love the beach and its smell\",\n              description: \"Write a description about this image. You never know how this image can break the internet\"\n            });\n\n          case 8:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _insertMedia.apply(this, arguments);\n}\n\nexport var getDateTime = function getDateTime(d) {\n  var m = d ? new Date(d) : new Date();\n  return m.getUTCFullYear() + \"-\" + (\"0\" + (m.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + m.getUTCDate()).slice(-2) + \" \" + (\"0\" + m.getUTCHours()).slice(-2) + \":\" + (\"0\" + m.getUTCMinutes()).slice(-2) + \":\" + (\"0\" + m.getUTCSeconds()).slice(-2);\n};","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/graphql/db/seed/seed.ts"],"names":["copydir","generatePost","mkdirp","path","posts","promisify","rimraf","createAuthor","ROLES","mkdirpAsync","rimrafAsync","copydirAsync","dataDir","publicUploadsDir","uploadsSourceDir","absPath","p","join","__dirname","models","seed","_models","folderCheck","console","time","Promise","all","timeEnd","sequelize","sync","force","insertRolePermData","insertAuthor","insertTags","Tags","findAll","tags","map","post","insertPost","insertMedia","admin","reviewer","reader","author","Role","create","name","role","addPermission","MANAGE_OWN_POSTS","READ_ONLY_POSTS","MANAGE_ALL_POSTS","MANAGE_USERS","MANAGE_SETTINGS","Permission","adminAuthor","email","username","password","site_title","verified","rolename","ADMIN","demoAuthor","social","twitter","facebook","github","instagram","bio","avatar","AUTHOR","Author","findOne","where","slug","desc","tag","createTag","params","type","md","html","promises","authorId","id","title","toLocaleLowerCase","replace","Post","excerpt","cover_image","status","createdAt","getDateTime","publishedAt","reading_time","addPost","addTag","createMedia","url","width","height","description","d","m","Date","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds"],"mappings":"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","sourcesContent":["import dbModels from \"./../models/index\";\nimport copydir from \"copy-dir\";\nimport generatePost from \"./contentGenerator\";\nimport mkdirp from \"mkdirp\";\nimport path from \"path\";\nimport posts from \"./posts\";\nimport { promisify } from \"util\";\nimport rimraf from \"rimraf\";\nimport { createAuthor } from \"../../../graphql/resolvers/author\";\nimport { ROLES } from \"../../../graphql/types\";\n\nconst mkdirpAsync = promisify(mkdirp);\nconst rimrafAsync = promisify(rimraf);\nconst copydirAsync = promisify(copydir);\n\n// All paths are relative to this file\nconst dataDir = \"../../../../data\";\nconst publicUploadsDir = \"../../../../public/uploads\";\nconst uploadsSourceDir = \"./uploads\";\n\nfunction absPath(p) {\n  return path.join(__dirname, p);\n}\n\nlet models: typeof dbModels;\nexport const seed = async (_models: typeof dbModels, folderCheck = true) => {\n  models = _models;\n\n  if (folderCheck) {\n    console.time(\"ensure data directories\");\n    await Promise.all([\n      mkdirpAsync(absPath(dataDir)),\n      mkdirpAsync(absPath(publicUploadsDir)),\n    ]);\n    console.timeEnd(\"ensure data directories\");\n  }\n\n  console.time(\"sync sequelize models\");\n  await models.sequelize.sync({ force: true });\n  console.timeEnd(\"sync sequelize models\");\n  if (folderCheck) {\n    // do some clean first. delete the uploads folder\n    console.time(\"sync uploads\");\n    //@ts-ignore\n    await rimrafAsync(path.join(absPath(publicUploadsDir, \"*\")));\n    await copydirAsync(absPath(uploadsSourceDir), absPath(publicUploadsDir));\n    console.timeEnd(\"sync uploads\");\n  }\n\n  console.time(\"insert roles and permissions\");\n  await insertRolePermData(models);\n  console.timeEnd(\"insert roles and permissions\");\n\n  console.time(\"insert authors and Tags\");\n  await insertAuthor();\n  await insertTags();\n  console.timeEnd(\"insert authors and Tags\");\n\n  console.time(\"insert posts, media\");\n  const [tags] = await Promise.all([models.Tags.findAll()]);\n\n  await Promise.all([...posts.map(post => insertPost(post, models, tags))]);\n  await insertMedia();\n  console.timeEnd(\"insert posts, settings, media\");\n};\n\nexport async function insertRolePermData(models: typeof dbModels) {\n  const [\n    MANAGE_OWN_POSTS,\n    READ_ONLY_POSTS,\n    MANAGE_ALL_POSTS,\n    MANAGE_USERS,\n    MANAGE_SETTINGS,\n  ] = await Promise.all([\n    models.Permission.create({\n      name: \"MANAGE_OWN_POSTS\",\n    }),\n    models.Permission.create({\n      name: \"READ_ONLY_POSTS\",\n    }),\n    models.Permission.create({\n      name: \"MANAGE_ALL_POSTS\",\n    }),\n    models.Permission.create({\n      name: \"MANAGE_USERS\",\n    }),\n    models.Permission.create({\n      name: \"MANAGE_SETTINGS\",\n    }),\n  ]);\n\n  async function admin() {\n    const role = await models.Role.create({ name: \"ADMIN\" });\n    return Promise.all([\n      role.addPermission(READ_ONLY_POSTS),\n      role.addPermission(MANAGE_ALL_POSTS),\n      role.addPermission(MANAGE_USERS),\n      role.addPermission(MANAGE_SETTINGS),\n      role.addPermission(MANAGE_OWN_POSTS),\n    ]);\n  }\n\n  async function reviewer() {\n    const role = await models.Role.create({ name: \"REVIEWER\" });\n    return role.addPermission(MANAGE_ALL_POSTS);\n  }\n\n  async function reader() {\n    const role = await models.Role.create({ name: \"READER\" });\n    return role.addPermission(READ_ONLY_POSTS);\n  }\n\n  async function author() {\n    const role = await models.Role.create({ name: \"AUTHOR\" });\n    return role.addPermission(MANAGE_OWN_POSTS);\n  }\n\n  return Promise.all([admin(), reviewer(), reader(), author()]);\n}\n\nexport async function insertAuthor() {\n  const adminAuthor = createAuthor({\n    name: \"Admin\",\n    email: \"admin@admin.com\",\n    username: \"admin\",\n    password: \"admin\",\n    site_title: \"Admin Account\",\n    verified: true,\n    rolename: ROLES.ADMIN,\n  });\n\n  const demoAuthor = createAuthor({\n    name: \"Demo Author\",\n    email: \"demo@demo.com\",\n    username: \"demo\",\n    password: \"demo\",\n    site_title: \"Demo Account\",\n    social: {\n      twitter: \"https://twitter.com\",\n      facebook: \"https://facebook.com\",\n      github: \"https://github.com\",\n      instagram: \"https://instagram.com\",\n    },\n    verified: true,\n    bio: \"You can some information about yourself for the world to know you a little better.\",\n    avatar:\n      \"https://images.unsplash.com/photo-1572478465144-f5f6573e8bfd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=120&q=80\",\n    rolename: ROLES.AUTHOR,\n  });\n\n  return Promise.all([adminAuthor, demoAuthor]);\n}\n\nexport async function insertTags() {\n  const author = await models.Author.findOne({ where: { username: \"demo\" } });\n  const tags = [\n    {\n      name: \"Home\",\n      slug: \"home\",\n      desc: \"\",\n    },\n    {\n      name: \"first-post\",\n      slug: \"first-post\",\n      desc: \"\",\n    },\n  ];\n\n  if (author) {\n    return Promise.all([...tags.map(tag => author.createTag(tag))]);\n  }\n}\n\nexport async function insertPost(params, models: typeof dbModels, tags) {\n  // get author  // 1 or 2\n  const { md, html } = generatePost(params.type);\n  let promises: any[] = [];\n  const authorId = 2;\n  let author = await models.Author.findOne({ where: { id: authorId } });\n  const title =\n    params.type === \"post\" ? \"Welcome to Letterpad\" : \"Letterpad Typography\";\n  const slug = title.toLocaleLowerCase().replace(/ /g, \"-\");\n\n  let post = await models.Post.create({\n    title,\n    md: md,\n    html: html,\n    excerpt:\n      \"You can use this space to write a small description about the topic. This will be helpful in SEO.\",\n    cover_image: params.cover_image,\n    authorId: authorId,\n    type: params.type,\n    status: params.status,\n    slug: slug,\n    createdAt: getDateTime(),\n    publishedAt: getDateTime(),\n    reading_time: \"5 mins\",\n  });\n  if (author && post) {\n    promises = [author.addPost(post)];\n    if (params.type === \"post\") {\n      promises = [...promises, ...tags.map(tag => post.addTag(tag))];\n    }\n\n    return Promise.all(promises);\n  }\n}\n\nexport async function insertMedia() {\n  const author = await models.Author.findOne({ where: { id: 1 } });\n  if (author) {\n    await author.createMedia({\n      url: \"https://images.unsplash.com/photo-1473181488821-2d23949a045a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\",\n      name: \"Blueberries\",\n      width: 1350,\n      height: 900,\n      description:\n        \"Write a description about this image. You never know how this image can break the internet\",\n    });\n\n    await author.createMedia({\n      url: \"https://images.unsplash.com/photo-1524654458049-e36be0721fa2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80\",\n      width: 1350,\n      height: 900,\n      name: \"I love the beach and its smell\",\n      description:\n        \"Write a description about this image. You never know how this image can break the internet\",\n    });\n  }\n}\n\nexport const getDateTime = (d?: Date) => {\n  const m = d ? new Date(d) : new Date();\n\n  return (\n    m.getUTCFullYear() +\n    \"-\" +\n    (\"0\" + (m.getUTCMonth() + 1)).slice(-2) +\n    \"-\" +\n    (\"0\" + m.getUTCDate()).slice(-2) +\n    \" \" +\n    (\"0\" + m.getUTCHours()).slice(-2) +\n    \":\" +\n    (\"0\" + m.getUTCMinutes()).slice(-2) +\n    \":\" +\n    (\"0\" + m.getUTCSeconds()).slice(-2)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}