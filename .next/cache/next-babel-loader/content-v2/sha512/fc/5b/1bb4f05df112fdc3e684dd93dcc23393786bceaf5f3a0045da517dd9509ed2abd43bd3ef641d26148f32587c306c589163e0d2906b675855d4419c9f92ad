{"ast":null,"code":"import _regeneratorRuntime from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport nextConfig from \"../next.config\";\nexport var uploadFile = function uploadFile(_ref) {\n  var files = _ref.files,\n      type = _ref.type;\n  var data = new FormData();\n\n  if (type) {\n    data.append(\"type\", type);\n  }\n\n  for (var i = 0; i < files.length; i++) {\n    data.append(\"file\", files[i]);\n  }\n\n  return fetch(nextConfig.basePath + \"/api/customRequest\", {\n    method: \"post\",\n    body: data,\n    headers: {\n      authorization: localStorage[\"next-auth.session-token\"]\n    }\n  }).then(function (data) {\n    return data.json();\n  }).then( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(image) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", image);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/shared/upload.ts"],"names":["nextConfig","uploadFile","files","type","data","FormData","append","i","length","fetch","basePath","method","body","headers","authorization","localStorage","then","json","image"],"mappings":";;AACA,OAAOA,UAAP,MAAuB,gBAAvB;AAMA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAG6B;AAAA,MAFrDC,KAEqD,QAFrDA,KAEqD;AAAA,MADrDC,IACqD,QADrDA,IACqD;AACrD,MAAMC,IAAc,GAAG,IAAIC,QAAJ,EAAvB;;AACA,MAAIF,IAAJ,EAAU;AACRC,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,IAApB;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCH,IAAAA,IAAI,CAACE,MAAL,SAAoBJ,KAAK,CAACK,CAAD,CAAzB;AACD;;AAED,SAAOE,KAAK,CAACT,UAAU,CAACU,QAAX,GAAsB,oBAAvB,EAA6C;AACvDC,IAAAA,MAAM,EAAE,MAD+C;AAEvDC,IAAAA,IAAI,EAAER,IAFiD;AAGvDS,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,YAAY,CAAC,yBAAD;AADpB;AAH8C,GAA7C,CAAL,CAOJC,IAPI,CAOC,UAAAZ,IAAI,EAAI;AACZ,WAAOA,IAAI,CAACa,IAAL,EAAP;AACD,GATI,EAUJD,IAVI;AAAA,yEAUC,iBAAME,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,+CACGA,KADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVD;;AAAA;AAAA;AAAA;AAAA,MAAP;AAaD,CA1BM","sourcesContent":["import { IMediaUploadResult } from \"@/graphql/types\";\nimport nextConfig from \"../next.config\";\ninterface IUploadFileProps {\n  files: File[] | FileList;\n  type?: string;\n}\n\nexport const uploadFile = ({\n  files,\n  type,\n}: IUploadFileProps): Promise<IMediaUploadResult[]> => {\n  const data: FormData = new FormData();\n  if (type) {\n    data.append(\"type\", type);\n  }\n\n  for (let i = 0; i < files.length; i++) {\n    data.append(`file`, files[i]);\n  }\n\n  return fetch(nextConfig.basePath + \"/api/customRequest\", {\n    method: \"post\",\n    body: data,\n    headers: {\n      authorization: localStorage[\"next-auth.session-token\"],\n    },\n  })\n    .then(data => {\n      return data.json();\n    })\n    .then(async image => {\n      return image;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}