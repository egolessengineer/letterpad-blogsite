{"ast":null,"code":"import _regeneratorRuntime from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/pages/tags.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Table, Button, Popconfirm, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { useEffect, useState } from \"react\";\nimport { UpdateTagsDocument, DeleteTagsDocument } from \"@/__generated__/queries/mutations.graphql\";\nimport { EditableCell, EditableRow } from \"@/components/ediitable-table\";\nimport { initializeApollo } from \"@/graphql/apollo\";\nimport { TagsDocument } from \"@/graphql/queries/queries.graphql\";\nimport CustomLayout from \"@/components/layouts/Layout\";\nimport withAuthCheck from \"../hoc/withAuth\";\nimport Head from \"next/head\";\n\nvar EditableTable = function EditableTable() {\n  _s();\n\n  var _useState = useState([]),\n      dataSource = _useState[0],\n      setDataSource = _useState[1];\n\n  var _useState2 = useState(0),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  useEffect(function () {\n    fetchTags().then(function (response) {\n      if (!response.props.error) {\n        setDataSource(response.props.data.map(function (item) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            key: item.id,\n            posts: item.posts,\n            desc: item.desc || \"\"\n          });\n        }));\n        setCount(response.props.data.length + 1);\n      }\n    });\n  }, []);\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var tagToDelete;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tagToDelete = _toConsumableArray(dataSource).filter(function (item) {\n                return item.key === key;\n              });\n\n              if (!(tagToDelete.length > 0 && tagToDelete[0].id > 0)) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 4;\n              return deleteTagApi(tagToDelete[0].id);\n\n            case 4:\n              setDataSource(_toConsumableArray(dataSource).filter(function (item) {\n                return item.key !== key;\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var headers = getHeaders(dataSource, handleDelete);\n  var components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell\n    }\n  };\n  var columns = headers.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          editable: col.editable,\n          required: col.required,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: handleSave\n        };\n      }\n    });\n  });\n\n  var handleAdd = function handleAdd() {\n    var newData = {\n      key: count + 1,\n      name: \"new-tag-\".concat(count),\n      id: 0,\n      desc: \"\",\n      posts: 0,\n      slug: \"new-tag-\".concat(count)\n    };\n    setDataSource([].concat(_toConsumableArray(dataSource), [newData]));\n    setCount(count + 1);\n  };\n\n  var handleSave = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(row) {\n      var newData, index, item, name, id, desc, slug, client;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newData = _toConsumableArray(dataSource);\n              index = newData.findIndex(function (item) {\n                return row.key === item.key;\n              });\n              item = newData[index];\n              newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n              name = row.name, id = row.id, desc = row.desc, slug = row.slug;\n              _context2.next = 7;\n              return initializeApollo();\n\n            case 7:\n              client = _context2.sent;\n              _context2.next = 10;\n              return client.mutate({\n                mutation: UpdateTagsDocument,\n                variables: {\n                  data: {\n                    name: name,\n                    id: id,\n                    desc: desc,\n                    slug: slug\n                  }\n                }\n              });\n\n            case 10:\n              setDataSource(newData);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSave(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Tags\")), __jsx(PageHeader, {\n    className: \"site-page-header\",\n    title: \"Tags\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleAdd,\n    type: \"primary\",\n    style: {\n      marginBottom: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Add a row\"), __jsx(Table, {\n    components: components,\n    rowClassName: function rowClassName() {\n      return \"editable-row\";\n    },\n    bordered: true,\n    dataSource: dataSource,\n    columns: columns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(EditableTable, \"jxscpviSuOc0W/FBfLYlUQlU+gQ=\");\n\n_c = EditableTable;\nvar EditableTableWithAuth = withAuthCheck(EditableTable);\n_c2 = EditableTableWithAuth;\nEditableTableWithAuth.layout = CustomLayout;\nexport default EditableTableWithAuth;\nexport function fetchTags() {\n  return _fetchTags.apply(this, arguments);\n}\n\nfunction _fetchTags() {\n  _fetchTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var _tags$data$tags;\n\n    var apolloClient, tags, data, _tags$data$tags2;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return initializeApollo();\n\n          case 2:\n            apolloClient = _context3.sent;\n            _context3.next = 5;\n            return apolloClient.query({\n              query: TagsDocument\n            });\n\n          case 5:\n            tags = _context3.sent;\n\n            if (!(((_tags$data$tags = tags.data.tags) === null || _tags$data$tags === void 0 ? void 0 : _tags$data$tags.__typename) === \"TagsNode\")) {\n              _context3.next = 11;\n              break;\n            }\n\n            data = tags.data.tags.rows.map(function (item) {\n              var _item$posts;\n\n              var count = ((_item$posts = item.posts) === null || _item$posts === void 0 ? void 0 : _item$posts.__typename) === \"PostsNode\" ? item.posts.count : 0;\n              return _objectSpread(_objectSpread({}, item), {}, {\n                posts: count\n              });\n            });\n            return _context3.abrupt(\"return\", {\n              props: {\n                data: data,\n                error: \"\"\n              }\n            });\n\n          case 11:\n            return _context3.abrupt(\"return\", {\n              props: {\n                data: [],\n                error: ((_tags$data$tags2 = tags.data.tags) === null || _tags$data$tags2 === void 0 ? void 0 : _tags$data$tags2.__typename) === \"TagsError\" ? tags.data.tags.message : \"\"\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _fetchTags.apply(this, arguments);\n}\n\nfunction deleteTagApi(_x3) {\n  return _deleteTagApi.apply(this, arguments);\n}\n\nfunction _deleteTagApi() {\n  _deleteTagApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n    var _tags$data;\n\n    var apolloClient, tags;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return initializeApollo();\n\n          case 2:\n            apolloClient = _context4.sent;\n            _context4.next = 5;\n            return apolloClient.mutate({\n              mutation: DeleteTagsDocument,\n              variables: {\n                id: id\n              }\n            });\n\n          case 5:\n            tags = _context4.sent;\n            return _context4.abrupt(\"return\", (_tags$data = tags.data) === null || _tags$data === void 0 ? void 0 : _tags$data.deleteTags);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _deleteTagApi.apply(this, arguments);\n}\n\nfunction getHeaders(dataSource, handleDelete) {\n  var _this2 = this;\n\n  return [{\n    title: \"name\",\n    dataIndex: \"name\",\n    width: \"30%\",\n    editable: true,\n    required: true\n  }, {\n    title: \"desc\",\n    dataIndex: \"desc\",\n    editable: true,\n    required: false,\n    render: function render(_, _record) {\n      return _ || __jsx(Button, {\n        type: \"dashed\",\n        size: \"small\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, \"Edit\");\n    }\n  }, {\n    title: \"posts\",\n    dataIndex: \"posts\"\n  }, {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    render: function render(_, record) {\n      return dataSource.length >= 1 ? __jsx(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: function onConfirm() {\n          return handleDelete(record.key);\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, \"Delete\")) : null;\n    }\n  }];\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableTable\");\n$RefreshReg$(_c2, \"EditableTableWithAuth\");","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/pages/tags.tsx"],"names":["Table","Button","Popconfirm","PageHeader","Content","useEffect","useState","UpdateTagsDocument","DeleteTagsDocument","EditableCell","EditableRow","initializeApollo","TagsDocument","CustomLayout","withAuthCheck","Head","EditableTable","dataSource","setDataSource","count","setCount","fetchTags","then","response","props","error","data","map","item","key","id","posts","desc","length","handleDelete","tagToDelete","filter","deleteTagApi","headers","getHeaders","components","body","row","cell","columns","col","editable","onCell","record","required","dataIndex","title","handleSave","handleAdd","newData","name","slug","index","findIndex","splice","client","mutate","mutation","variables","padding","marginBottom","EditableTableWithAuth","layout","apolloClient","query","tags","__typename","rows","message","deleteTags","width","render","_","_record"],"mappings":"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","sourcesContent":["import { Table, Button, Popconfirm, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { useEffect, useState } from \"react\";\nimport {\n  UpdateTagsMutationVariables,\n  UpdateTagsMutation,\n  UpdateTagsDocument,\n  DeleteTagsMutation,\n  DeleteTagsMutationVariables,\n  DeleteTagsDocument,\n} from \"@/__generated__/queries/mutations.graphql\";\nimport {\n  TagsQuery,\n  TagsQueryVariables,\n} from \"@/__generated__/queries/queries.graphql\";\nimport { EditableCell, EditableRow } from \"@/components/ediitable-table\";\nimport { initializeApollo } from \"@/graphql/apollo\";\nimport { TagsDocument } from \"@/graphql/queries/queries.graphql\";\nimport CustomLayout from \"@/components/layouts/Layout\";\nimport withAuthCheck from \"../hoc/withAuth\";\nimport Head from \"next/head\";\n\ntype EditableTableProps = Parameters<typeof Table>[0];\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  id: number;\n  desc: string;\n  slug: string;\n  posts: number;\n}\n\ntype ColumnTypes = Exclude<EditableTableProps[\"columns\"], undefined>;\n\nconst EditableTable = () => {\n  const [dataSource, setDataSource] = useState<DataType[]>([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    fetchTags().then(response => {\n      if (!response.props.error) {\n        setDataSource(\n          response.props.data.map(item => ({\n            ...item,\n            key: item.id,\n            posts: item.posts,\n            desc: item.desc || \"\",\n          })),\n        );\n        setCount(response.props.data.length + 1);\n      }\n    });\n  }, []);\n\n  const handleDelete = async (key: React.Key) => {\n    const tagToDelete = [...dataSource].filter(item => item.key === key);\n    if (tagToDelete.length > 0 && tagToDelete[0].id > 0) {\n      await deleteTagApi(tagToDelete[0].id);\n    }\n    setDataSource([...dataSource].filter(item => item.key !== key));\n  };\n\n  const headers = getHeaders(dataSource, handleDelete);\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columns = headers.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: DataType) => ({\n        record,\n        editable: col.editable,\n        required: col.required,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave: handleSave,\n      }),\n    };\n  });\n\n  const handleAdd = () => {\n    const newData: DataType = {\n      key: count + 1,\n      name: `new-tag-${count}`,\n      id: 0,\n      desc: \"\",\n      posts: 0,\n      slug: `new-tag-${count}`,\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n\n  const handleSave = async (row: DataType) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n\n    const { name, id, desc, slug } = row;\n    const client = await initializeApollo();\n    await client.mutate<UpdateTagsMutation, UpdateTagsMutationVariables>({\n      mutation: UpdateTagsDocument,\n      variables: {\n        data: { name, id, desc, slug },\n      },\n    });\n    setDataSource(newData);\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Tags</title>\n      </Head>\n      <PageHeader className=\"site-page-header\" title=\"Tags\"></PageHeader>\n      <Content>\n        <div className=\"site-layout-background\" style={{ padding: 16 }}>\n          <Button\n            onClick={handleAdd}\n            type=\"primary\"\n            style={{ marginBottom: 16 }}\n          >\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => \"editable-row\"}\n            bordered\n            dataSource={dataSource}\n            columns={columns as ColumnTypes}\n          />\n        </div>\n      </Content>\n    </>\n  );\n};\n\nconst EditableTableWithAuth = withAuthCheck(EditableTable);\nEditableTableWithAuth.layout = CustomLayout;\nexport default EditableTableWithAuth;\n\nexport async function fetchTags() {\n  const apolloClient = await initializeApollo();\n\n  const tags = await apolloClient.query<TagsQuery, TagsQueryVariables>({\n    query: TagsDocument,\n  });\n  if (tags.data.tags?.__typename === \"TagsNode\") {\n    const data = tags.data.tags.rows.map(item => {\n      const count =\n        item.posts?.__typename === \"PostsNode\" ? item.posts.count : 0;\n      return { ...item, posts: count };\n    });\n    return {\n      props: {\n        data,\n        error: \"\",\n      },\n    };\n  } else {\n    return {\n      props: {\n        data: [],\n        error:\n          tags.data.tags?.__typename === \"TagsError\"\n            ? tags.data.tags.message\n            : \"\",\n      },\n    };\n  }\n}\n\nasync function deleteTagApi(id) {\n  const apolloClient = await initializeApollo();\n\n  const tags = await apolloClient.mutate<\n    DeleteTagsMutation,\n    DeleteTagsMutationVariables\n  >({\n    mutation: DeleteTagsDocument,\n    variables: {\n      id,\n    },\n  });\n\n  return tags.data?.deleteTags;\n}\n\nfunction getHeaders(dataSource, handleDelete) {\n  return [\n    {\n      title: \"name\",\n      dataIndex: \"name\",\n      width: \"30%\",\n      editable: true,\n      required: true,\n    },\n    {\n      title: \"desc\",\n      dataIndex: \"desc\",\n      editable: true,\n      required: false,\n      render: (_, _record: { key: React.Key }) => {\n        return (\n          _ || (\n            <Button type=\"dashed\" size=\"small\">\n              Edit\n            </Button>\n          )\n        );\n      },\n    },\n    {\n      title: \"posts\",\n      dataIndex: \"posts\",\n    },\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_, record: { key: React.Key }) =>\n        dataSource.length >= 1 ? (\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => handleDelete(record.key)}\n          >\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null,\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}