{"ast":null,"code":"import nextConfig from \"../next.config\";\nexport const uploadFile = ({\n  files,\n  type\n}) => {\n  const data = new FormData();\n\n  if (type) {\n    data.append(\"type\", type);\n  }\n\n  for (let i = 0; i < files.length; i++) {\n    data.append(`file`, files[i]);\n  }\n\n  return fetch(nextConfig.basePath + \"/api/customRequest\", {\n    method: \"post\",\n    body: data,\n    headers: {\n      authorization: localStorage[\"next-auth.session-token\"]\n    }\n  }).then(data => {\n    return data.json();\n  }).then(async image => {\n    return image;\n  });\n};","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/shared/upload.ts"],"names":["nextConfig","uploadFile","files","type","data","FormData","append","i","length","fetch","basePath","method","body","headers","authorization","localStorage","then","json","image"],"mappings":"AACA,OAAOA,UAAP,MAAuB,gBAAvB;AAMA,OAAO,MAAMC,UAAU,GAAG,CAAC;AACzBC,EAAAA,KADyB;AAEzBC,EAAAA;AAFyB,CAAD,KAG6B;AACrD,QAAMC,IAAc,GAAG,IAAIC,QAAJ,EAAvB;;AACA,MAAIF,IAAJ,EAAU;AACRC,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,IAApB;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCH,IAAAA,IAAI,CAACE,MAAL,CAAa,MAAb,EAAoBJ,KAAK,CAACK,CAAD,CAAzB;AACD;;AAED,SAAOE,KAAK,CAACT,UAAU,CAACU,QAAX,GAAsB,oBAAvB,EAA6C;AACvDC,IAAAA,MAAM,EAAE,MAD+C;AAEvDC,IAAAA,IAAI,EAAER,IAFiD;AAGvDS,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,YAAY,CAAC,yBAAD;AADpB;AAH8C,GAA7C,CAAL,CAOJC,IAPI,CAOCZ,IAAI,IAAI;AACZ,WAAOA,IAAI,CAACa,IAAL,EAAP;AACD,GATI,EAUJD,IAVI,CAUC,MAAME,KAAN,IAAe;AACnB,WAAOA,KAAP;AACD,GAZI,CAAP;AAaD,CA1BM","sourcesContent":["import { IMediaUploadResult } from \"@/graphql/types\";\nimport nextConfig from \"../next.config\";\ninterface IUploadFileProps {\n  files: File[] | FileList;\n  type?: string;\n}\n\nexport const uploadFile = ({\n  files,\n  type,\n}: IUploadFileProps): Promise<IMediaUploadResult[]> => {\n  const data: FormData = new FormData();\n  if (type) {\n    data.append(\"type\", type);\n  }\n\n  for (let i = 0; i < files.length; i++) {\n    data.append(`file`, files[i]);\n  }\n\n  return fetch(nextConfig.basePath + \"/api/customRequest\", {\n    method: \"post\",\n    body: data,\n    headers: {\n      authorization: localStorage[\"next-auth.session-token\"],\n    },\n  })\n    .then(data => {\n      return data.json();\n    })\n    .then(async image => {\n      return image;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}