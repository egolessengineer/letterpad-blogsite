{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/components/posts/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { getImageAttrs } from \"@/graphql/utils/imageAttributs\";\nexport const columns = [{\n  title: \"Image\",\n  dataIndex: \"cover_image\",\n  key: \"cover_image\",\n  responsive: [\"md\"],\n  render: cover_image => {\n    if (!cover_image.src) return null;\n    const imageAttrs = getImageAttrs(cover_image.src);\n    return __jsx(\"img\", _extends({}, imageAttrs, {\n      width: 80,\n      height: 50,\n      style: {\n        objectFit: \"cover\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }));\n  }\n}, {\n  title: \"Title\",\n  dataIndex: \"title\",\n  key: \"title\",\n  width: \"45%\"\n}, // {\n//   title: \"Description\",\n//   dataIndex: \"excerpt\",\n//   key: \"excerpt\",\n//   width: \"45%\",\n//   responsive: [\"md\"] as Breakpoint[],\n// },\n{\n  title: \"Status\",\n  dataIndex: \"status\",\n  key: \"status\",\n  render: status => __jsx(\"span\", {\n    className: `post-status post-status-${status}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })\n}, {\n  title: \"Updated\",\n  dataIndex: \"updatedAt\",\n  key: \"updatedAt\"\n}];\nexport const postsColumns = [...columns, {\n  title: \"Tags\",\n  dataIndex: \"tags\",\n  key: \"tags\",\n  responsive: [\"md\"],\n  render: tags => tags.map(tag => tag.name).join(\", \")\n}];","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/components/posts/index.tsx"],"names":["getImageAttrs","columns","title","dataIndex","key","responsive","render","cover_image","src","imageAttrs","objectFit","width","status","postsColumns","tags","map","tag","name","join"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,gCAA9B;AAQA,OAAO,MAAMC,OAAO,GAAG,CACrB;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,aAFb;AAGEC,EAAAA,GAAG,EAAE,aAHP;AAIEC,EAAAA,UAAU,EAAE,CAAC,IAAD,CAJd;AAKEC,EAAAA,MAAM,EAAGC,WAAD,IAAwB;AAC9B,QAAI,CAACA,WAAW,CAACC,GAAjB,EAAsB,OAAO,IAAP;AACtB,UAAMC,UAAU,GAAGT,aAAa,CAACO,WAAW,CAACC,GAAb,CAAhC;AACA,WACE,0BACMC,UADN;AAEE,MAAA,KAAK,EAAE,EAFT;AAGE,MAAA,MAAM,EAAE,EAHV;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;AAhBH,CADqB,EAmBrB;AACER,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEO,EAAAA,KAAK,EAAE;AAJT,CAnBqB,EAyBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACET,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,SAAS,EAAE,QAFb;AAGEC,EAAAA,GAAG,EAAE,QAHP;AAIEE,EAAAA,MAAM,EAAGM,MAAD,IACN;AAAM,IAAA,SAAS,EAAG,2BAA0BA,MAAO,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,CAhCqB,EAwCrB;AACEV,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAxCqB,CAAhB;AA+CP,OAAO,MAAMS,YAAY,GAAG,CAC1B,GAAGZ,OADuB,EAE1B;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE,MAHP;AAIEC,EAAAA,UAAU,EAAE,CAAC,IAAD,CAJd;AAKEC,EAAAA,MAAM,EAAGQ,IAAD,IAAkBA,IAAI,CAACC,GAAL,CAASC,GAAG,IAAIA,GAAG,CAACC,IAApB,EAA0BC,IAA1B,CAA+B,IAA/B;AAL5B,CAF0B,CAArB","sourcesContent":["import { getImageAttrs } from \"@/graphql/utils/imageAttributs\";\nimport {\n  Image,\n  PostStatusOptions,\n  Tags,\n} from \"@/__generated__/type-defs.graphqls\";\nimport { Breakpoint } from \"antd/lib/_util/responsiveObserve\";\n\nexport const columns = [\n  {\n    title: \"Image\",\n    dataIndex: \"cover_image\",\n    key: \"cover_image\",\n    responsive: [\"md\"] as Breakpoint[],\n    render: (cover_image: Image) => {\n      if (!cover_image.src) return null;\n      const imageAttrs = getImageAttrs(cover_image.src);\n      return (\n        <img\n          {...imageAttrs}\n          width={80}\n          height={50}\n          style={{ objectFit: \"cover\" }}\n        />\n      );\n    },\n  },\n  {\n    title: \"Title\",\n    dataIndex: \"title\",\n    key: \"title\",\n    width: \"45%\",\n  },\n  // {\n  //   title: \"Description\",\n  //   dataIndex: \"excerpt\",\n  //   key: \"excerpt\",\n  //   width: \"45%\",\n  //   responsive: [\"md\"] as Breakpoint[],\n  // },\n  {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: (status: PostStatusOptions) => (\n      <span className={`post-status post-status-${status}`} />\n    ),\n  },\n  {\n    title: \"Updated\",\n    dataIndex: \"updatedAt\",\n    key: \"updatedAt\",\n  },\n];\n\nexport const postsColumns = [\n  ...columns,\n  {\n    title: \"Tags\",\n    dataIndex: \"tags\",\n    key: \"tags\",\n    responsive: [\"md\"] as Breakpoint[],\n    render: (tags: Tags[]) => tags.map(tag => tag.name).join(\", \"),\n  },\n];\n"]},"metadata":{},"sourceType":"module"}