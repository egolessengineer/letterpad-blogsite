{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/components/main.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { Provider } from \"next-auth/client\";\nimport Head from \"next/head\";\nimport nextConfig from \"next.config\";\n\nconst Main = ({\n  apolloClient,\n  Layout,\n  settings,\n  Component,\n  props\n}) => {\n  return __jsx(Provider, {\n    session: props.session,\n    options: {\n      basePath: nextConfig.basePath + \"/api/auth\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"icon\",\n    href: nextConfig.basePath + \"/uploads/logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), __jsx(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    settings: settings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({}, props, {\n    settings: settings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/components/main.tsx"],"names":["ApolloProvider","Provider","Head","nextConfig","Main","apolloClient","Layout","settings","Component","props","session","basePath"],"mappings":";;;;;;AACA,SAEEA,cAFF,QAIO,gBAJP;AAMA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AASA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,SAAlC;AAA6CC,EAAAA;AAA7C,CAAD,KAAkE;AAC7E,SACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAEA,KAAK,CAACC,OADjB;AAEE,IAAA,OAAO,EAAE;AAAEC,MAAAA,QAAQ,EAAER,UAAU,CAACQ,QAAX,GAAsB;AAAlC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAER,UAAU,CAACQ,QAAX,GAAsB,mBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeE,KAAf;AAAsB,IAAA,QAAQ,EAAEF,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CAPF,CADF;AAeD,CAhBD;;AAkBA,eAAeH,IAAf","sourcesContent":["import { Setting } from \"@/__generated__/type-defs.graphqls\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  NormalizedCacheObject,\n} from \"@apollo/client\";\nimport { NextComponentType, NextPageContext } from \"next\";\nimport { Provider } from \"next-auth/client\";\nimport { ComponentType } from \"react\";\nimport Head from \"next/head\";\nimport nextConfig from \"next.config\";\n\ninterface IProps {\n  apolloClient: ApolloClient<NormalizedCacheObject>;\n  Layout: ComponentType<{ settings: Setting }>;\n  settings: Setting;\n  Component: NextComponentType<NextPageContext, any, {}>;\n  props: any;\n}\nconst Main = ({ apolloClient, Layout, settings, Component, props }: IProps) => {\n  return (\n    <Provider\n      session={props.session}\n      options={{ basePath: nextConfig.basePath + \"/api/auth\" }}\n    >\n      <Head>\n        <link rel=\"icon\" href={nextConfig.basePath + \"/uploads/logo.png\"} />\n      </Head>\n      <ApolloProvider client={apolloClient}>\n        <Layout settings={settings}>\n          <Component {...props} settings={settings} />\n        </Layout>\n      </ApolloProvider>\n    </Provider>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}