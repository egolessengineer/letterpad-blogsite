{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Post } from \"./post\";\nimport { DataTypes, Model } from \"sequelize\";\nimport restoreSequelizeAttributesOnClass from \"./_tooling\";\nexport class Tags extends Model {\n  // Note the null assertions!\n  // Note the null assertions!\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"desc\", void 0);\n\n    _defineProperty(this, \"slug\", void 0);\n\n    _defineProperty(this, \"author_id\", void 0);\n\n    _defineProperty(this, \"createdAt\", void 0);\n\n    _defineProperty(this, \"updatedAt\", void 0);\n\n    _defineProperty(this, \"posts\", void 0);\n\n    _defineProperty(this, \"getPosts\", void 0);\n\n    _defineProperty(this, \"createPost\", void 0);\n\n    _defineProperty(this, \"hasPostById\", void 0);\n\n    _defineProperty(this, \"countPosts\", void 0);\n\n    _defineProperty(this, \"setPosts\", void 0);\n\n    restoreSequelizeAttributesOnClass(new.target, this, [\"getPosts\", \"createPost\", \"countPosts\", \"hasPostById\"]);\n  }\n\n}\nexport default function initTags(sequelize) {\n  Tags.init({\n    id: {\n      type: DataTypes.INTEGER,\n      autoIncrement: true,\n      primaryKey: true\n    },\n    name: {\n      type: DataTypes.STRING\n    },\n    desc: {\n      type: DataTypes.STRING,\n      defaultValue: \"\"\n    },\n    slug: {\n      type: DataTypes.STRING,\n\n      get() {\n        return \"/tag/\" + this.slug;\n      }\n\n    }\n  }, {\n    tableName: \"tags\",\n    sequelize // passing the `sequelize` instance is required\n\n  });\n  return Tags;\n}\nexport function associateTags() {\n  // Here we associate which actually populates out pre-declared `association` static and other methods.\n  Tags.belongsToMany(Post, {\n    through: \"postTags\",\n    foreignKey: \"tag_id\"\n  });\n}","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/graphql/db/models/tags.ts"],"names":["Post","DataTypes","Model","restoreSequelizeAttributesOnClass","Tags","constructor","args","new","target","initTags","sequelize","init","id","type","INTEGER","autoIncrement","primaryKey","name","STRING","desc","defaultValue","slug","get","tableName","associateTags","belongsToMany","through","foreignKey"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAEEC,SAFF,EAOEC,KAPF,QASO,WATP;AAUA,OAAOC,iCAAP,MAA8C,YAA9C;AAeA,OAAO,MAAMC,IAAN,SACGF,KADH,CAGP;AAWuD;AACI;AAKzDG,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;;AADmB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEnBH,IAAAA,iCAAiC,CAACI,GAAG,CAACC,MAAL,EAAa,IAAb,EAAmB,CAClD,UADkD,EAElD,YAFkD,EAGlD,YAHkD,EAIlD,aAJkD,CAAnB,CAAjC;AAMD;;AAzBH;AA4BA,eAAe,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC1CN,EAAAA,IAAI,CAACO,IAAL,CACE;AACEC,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAEZ,SAAS,CAACa,OADd;AAEFC,MAAAA,aAAa,EAAE,IAFb;AAGFC,MAAAA,UAAU,EAAE;AAHV,KADN;AAMEC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,IAAI,EAAEZ,SAAS,CAACiB;AADZ,KANR;AASEC,IAAAA,IAAI,EAAE;AACJN,MAAAA,IAAI,EAAEZ,SAAS,CAACiB,MADZ;AAEJE,MAAAA,YAAY,EAAE;AAFV,KATR;AAaEC,IAAAA,IAAI,EAAE;AACJR,MAAAA,IAAI,EAAEZ,SAAS,CAACiB,MADZ;;AAEJI,MAAAA,GAAG,GAAG;AACJ,eAAO,UAAU,KAAKD,IAAtB;AACD;;AAJG;AAbR,GADF,EAqBE;AACEE,IAAAA,SAAS,EAAE,MADb;AAEEb,IAAAA,SAFF,CAEa;;AAFb,GArBF;AA2BA,SAAON,IAAP;AACD;AAED,OAAO,SAASoB,aAAT,GAA+B;AACpC;AACApB,EAAAA,IAAI,CAACqB,aAAL,CAAmBzB,IAAnB,EAAyB;AACvB0B,IAAAA,OAAO,EAAE,UADc;AAEvBC,IAAAA,UAAU,EAAE;AAFW,GAAzB;AAID","sourcesContent":["import { Post } from \"./post\";\nimport {\n  BelongsToManySetAssociationsMixin,\n  DataTypes,\n  HasManyCountAssociationsMixin,\n  HasManyCreateAssociationMixin,\n  HasManyGetAssociationsMixin,\n  HasManyHasAssociationMixin,\n  Model,\n  Optional,\n} from \"sequelize\";\nimport restoreSequelizeAttributesOnClass from \"./_tooling\";\nimport { PostsResponse } from \"@/__generated__/queries/mutations.graphql\";\n\nexport interface TagsAttributes {\n  id: number;\n  name: string;\n  desc: string;\n  slug: string;\n  posts?: PostsResponse;\n  author_id?: number;\n}\n\nexport interface TagsCreationAttributes\n  extends Optional<TagsAttributes, \"id\"> {}\n\nexport class Tags\n  extends Model<TagsAttributes, TagsCreationAttributes>\n  implements TagsAttributes\n{\n  public id!: number;\n  public name!: string;\n  public desc!: string;\n  public slug!: string;\n  public author_id!: number;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n  public readonly posts!: PostsResponse;\n\n  public getPosts!: HasManyGetAssociationsMixin<Post>; // Note the null assertions!\n  public createPost!: HasManyCreateAssociationMixin<Post>; // Note the null assertions!\n  public hasPostById!: HasManyHasAssociationMixin<Post, Post[\"id\"]>;\n  public countPosts!: HasManyCountAssociationsMixin;\n  public setPosts!: BelongsToManySetAssociationsMixin<Post, Post[\"id\"]>;\n\n  constructor(...args) {\n    super(...args);\n    restoreSequelizeAttributesOnClass(new.target, this, [\n      \"getPosts\",\n      \"createPost\",\n      \"countPosts\",\n      \"hasPostById\",\n    ]);\n  }\n}\n\nexport default function initTags(sequelize) {\n  Tags.init(\n    {\n      id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true,\n      },\n      name: {\n        type: DataTypes.STRING,\n      },\n      desc: {\n        type: DataTypes.STRING,\n        defaultValue: \"\",\n      },\n      slug: {\n        type: DataTypes.STRING,\n        get() {\n          return \"/tag/\" + this.slug;\n        },\n      },\n    },\n    {\n      tableName: \"tags\",\n      sequelize, // passing the `sequelize` instance is required\n    },\n  );\n\n  return Tags;\n}\n\nexport function associateTags(): void {\n  // Here we associate which actually populates out pre-declared `association` static and other methods.\n  Tags.belongsToMany(Post, {\n    through: \"postTags\",\n    foreignKey: \"tag_id\",\n  });\n}\n"]},"metadata":{},"sourceType":"module"}