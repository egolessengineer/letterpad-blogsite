{"ast":null,"code":"import _regeneratorRuntime from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/components/ImageUpload.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef, useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport nextConfig from \"../../next.config\";\nimport FileExplorer from \"./file-explorer\";\nimport { getBase64 } from \"../../shared/utils\";\n\nvar ImageUpload = function ImageUpload(_ref) {\n  _s();\n\n  var url = _ref.url,\n      onDone = _ref.onDone,\n      name = _ref.name;\n\n  var _useState = useState(\"\"),\n      previewUrl = _useState[0],\n      setPreviewUrl = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      previewTitle = _useState2[0],\n      setPreviewTitle = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(false),\n      previewVisible = _useState4[0],\n      setPreviewVisible = _useState4[1];\n\n  var _useState5 = useState([]),\n      fileList = _useState5[0],\n      setFileList = _useState5[1];\n\n  var _useState6 = useState(false),\n      explorerVisible = _useState6[0],\n      setExplorerVisible = _useState6[1];\n\n  var ref = useRef();\n  useEffect(function () {\n    if (url) {\n      // @ts-ignore\n      setFileList([{\n        url: url,\n        status: \"done\",\n        uid: \"1\",\n        size: 200,\n        name: name\n      }]);\n    }\n  }, [url]);\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(info) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(info.file.status === \"uploading\")) {\n                _context.next = 4;\n                break;\n              }\n\n              setLoading(true);\n              _context.next = 12;\n              break;\n\n            case 4:\n              if (!(info.file.status === \"done\")) {\n                _context.next = 11;\n                break;\n              }\n\n              setLoading(false);\n              onDone(info.file.response);\n              setFileList(info.fileList);\n              return _context.abrupt(\"return\");\n\n            case 11:\n              if (info.file.status === \"removed\") {\n                onDone([{\n                  src: \"\",\n                  name: \"\",\n                  error: \"\",\n                  size: {\n                    width: 0,\n                    height: 0,\n                    type: \"\"\n                  }\n                }]);\n              }\n\n            case 12:\n              setFileList(info.fileList);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handlePreview = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!file.url && !file.preview)) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 3;\n              return getBase64(file.originFileObj);\n\n            case 3:\n              file.preview = _context2.sent;\n\n            case 4:\n              setPreviewVisible(true);\n              setPreviewUrl(file.url || file.preview);\n              setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handlePreview(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var uploadButton = __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, loading ? __jsx(LoadingOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }\n  }) : __jsx(PlusOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 40\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    onClick: function onClick() {\n      if (fileList.length > 0) return;\n      setExplorerVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Upload, {\n    openFileDialogOnClick: false,\n    name: \"avatar\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: true,\n    action: nextConfig.basePath + \"/api/customRequest\",\n    beforeUpload: beforeUpload,\n    onChange: handleChange,\n    fileList: fileList,\n    onPreview: handlePreview,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, fileList.length === 0 && uploadButton)), __jsx(Modal, {\n    visible: previewVisible,\n    title: previewTitle,\n    footer: null,\n    onCancel: function onCancel() {\n      setPreviewVisible(false);\n      setPreviewUrl(\"\");\n      setPreviewTitle(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    alt: \"example\",\n    style: {\n      width: \"100%\"\n    },\n    src: previewUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), __jsx(FileExplorer, {\n    isVisible: explorerVisible,\n    handleCancel: function handleCancel() {\n      return setExplorerVisible(false);\n    },\n    onInsert: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(files) {\n        var result, item;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                result = [];\n\n                for (url in files) {\n                  item = files[url];\n                  result.push({\n                    src: url,\n                    name: \"does-not-matter\",\n                    error: \"\",\n                    size: {\n                      width: item.width || 0,\n                      height: item.height || 0,\n                      type: \"\"\n                    }\n                  });\n                }\n\n                onDone(result);\n                setExplorerVisible(false);\n                return _context3.abrupt(\"return\", Promise.resolve(result));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ImageUpload, \"CssYHsx+O6Daz4fWvX189buLnyg=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\nexport function beforeUpload(file) {\n  var isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\" || file.type === \"image/webp\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  var isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/components/ImageUpload.tsx"],"names":["useEffect","useRef","useState","Upload","message","LoadingOutlined","PlusOutlined","Modal","nextConfig","FileExplorer","getBase64","ImageUpload","url","onDone","name","previewUrl","setPreviewUrl","previewTitle","setPreviewTitle","loading","setLoading","previewVisible","setPreviewVisible","fileList","setFileList","explorerVisible","setExplorerVisible","ref","status","uid","size","handleChange","info","file","response","src","error","width","height","type","handlePreview","preview","originFileObj","substring","lastIndexOf","uploadButton","marginTop","length","basePath","beforeUpload","files","result","item","push","Promise","resolve","isJpgOrPng","isLt2M"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { IMediaUploadResult } from \"@/graphql/types\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport nextConfig from \"../../next.config\";\nimport FileExplorer from \"./file-explorer\";\nimport { getBase64 } from \"../../shared/utils\";\n\ninterface IProps {\n  url: string;\n  name: string;\n  onDone: (response: IMediaUploadResult[]) => void;\n}\nconst ImageUpload = ({ url, onDone, name }: IProps) => {\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [fileList, setFileList] = useState<UploadChangeParam[\"fileList\"]>([]);\n  const [explorerVisible, setExplorerVisible] = useState(false);\n\n  const ref = useRef();\n  useEffect(() => {\n    if (url) {\n      // @ts-ignore\n      setFileList([{ url, status: \"done\", uid: \"1\", size: 200, name }]);\n    }\n  }, [url]);\n\n  const handleChange = async (info: UploadChangeParam) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n    } else if (info.file.status === \"done\") {\n      setLoading(false);\n      onDone(info.file.response);\n      setFileList(info.fileList);\n      return;\n    } else if (info.file.status === \"removed\") {\n      onDone([\n        {\n          src: \"\",\n          name: \"\",\n          error: \"\",\n          size: { width: 0, height: 0, type: \"\" },\n        },\n      ]);\n    }\n    setFileList(info.fileList);\n  };\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewVisible(true);\n    setPreviewUrl(file.url || file.preview);\n    setPreviewTitle(\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\n    );\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <>\n      <div\n        onClick={() => {\n          if (fileList.length > 0) return;\n          setExplorerVisible(true);\n        }}\n      >\n        <Upload\n          openFileDialogOnClick={false}\n          name=\"avatar\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={true}\n          action={nextConfig.basePath + \"/api/customRequest\"}\n          beforeUpload={beforeUpload}\n          onChange={handleChange}\n          fileList={fileList}\n          onPreview={handlePreview}\n          ref={ref}\n        >\n          {fileList.length === 0 && uploadButton}\n        </Upload>\n      </div>\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={() => {\n          setPreviewVisible(false);\n          setPreviewUrl(\"\");\n          setPreviewTitle(\"\");\n        }}\n      >\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewUrl} />\n      </Modal>\n      <FileExplorer\n        isVisible={explorerVisible}\n        handleCancel={() => setExplorerVisible(false)}\n        onInsert={async files => {\n          const result: IMediaUploadResult[] = [];\n          for (url in files) {\n            const item = files[url];\n            result.push({\n              src: url,\n              name: \"does-not-matter\",\n              error: \"\",\n              size: {\n                width: item.width || 0,\n                height: item.height || 0,\n                type: \"\",\n              },\n            });\n          }\n          onDone(result);\n          setExplorerVisible(false);\n          return Promise.resolve(result);\n        }}\n      />\n    </>\n  );\n};\n\nexport default ImageUpload;\n\nexport function beforeUpload(file: File) {\n  const isJpgOrPng =\n    file.type === \"image/jpeg\" ||\n    file.type === \"image/png\" ||\n    file.type === \"image/webp\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n}\n"]},"metadata":{},"sourceType":"module"}