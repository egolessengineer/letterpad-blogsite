{"ast":null,"code":"export let ROLES;\n\n(function (ROLES) {\n  ROLES[\"ADMIN\"] = \"ADMIN\";\n  ROLES[\"REVIEWER\"] = \"REVIEWER\";\n  ROLES[\"READER\"] = \"READER\";\n  ROLES[\"AUTHOR\"] = \"AUTHOR\";\n})(ROLES || (ROLES = {}));\n\nexport let PERMISSIOMS;\n\n(function (PERMISSIOMS) {\n  PERMISSIOMS[\"MANAGE_ALL_POSTS\"] = \"MANAGE_ALL_POSTS\";\n  PERMISSIOMS[\"MANAGE_OWN_POSTS\"] = \"MANAGE_OWN_POSTS\";\n  PERMISSIOMS[\"READ_ONLY_POSTS\"] = \"READ_ONLY_POSTS\";\n})(PERMISSIOMS || (PERMISSIOMS = {}));\n\nexport let PostTypes;\n\n(function (PostTypes) {\n  PostTypes[PostTypes[\"post\"] = 0] = \"post\";\n  PostTypes[PostTypes[\"page\"] = 1] = \"page\";\n})(PostTypes || (PostTypes = {}));","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/graphql/types.ts"],"names":["ROLES","PERMISSIOMS","PostTypes"],"mappings":"AAIA,WAAYA,KAAZ;;WAAYA,K;AAAAA,EAAAA,K;AAAAA,EAAAA,K;AAAAA,EAAAA,K;AAAAA,EAAAA,K;GAAAA,K,KAAAA,K;;AAOZ,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAMZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["import { NextApiRequest } from \"next\";\nimport { Author } from \"@/__generated__/type-defs.graphqls\";\nimport { Post } from \"./type-defs.graphqls\";\n\nexport enum ROLES {\n  ADMIN = \"ADMIN\",\n  REVIEWER = \"REVIEWER\",\n  READER = \"READER\",\n  AUTHOR = \"AUTHOR\",\n}\n\nexport enum PERMISSIOMS {\n  MANAGE_ALL_POSTS = \"MANAGE_ALL_POSTS\",\n  MANAGE_OWN_POSTS = \"MANAGE_OWN_POSTS\",\n  READ_ONLY_POSTS = \"READ_ONLY_POSTS\",\n}\n\nexport enum PostTypes {\n  post,\n  page,\n}\n\nexport type updatePostOptionalArgs = {\n  cover_image: string;\n  cover_image_width: number;\n  cover_image_height: number;\n} & Omit<Post, \"cover_image\" | \"cover_image_width\" | \"cover_image_height\">;\n\nexport type Session = Pick<\n  Author,\n  \"id\" | \"email\" | \"role\" | \"permissions\" | \"avatar\" | \"username\"\n>;\n\nexport interface SessionData extends Session {\n  __typename: \"SessionData\";\n}\n\nexport interface IMediaUploadResult {\n  src: string;\n  error: string | null;\n  name: string;\n  size: {\n    width: number;\n    height: number;\n    type: string;\n  };\n}\n\nexport type NextApiRequestWithFormData = NextApiRequest & {\n  files: BlobCorrected[];\n};\n\nexport type BlobCorrected = Blob & {\n  buffer: Buffer;\n  originalname: string;\n  hash: string;\n};\n\ninterface IImageAttrs {\n  src: string;\n  sizes: string;\n  \"data-srcset\": string;\n  srcset: string[];\n  width: string;\n  loading: \"lazy\";\n}\nexport type IImageAttrsResult = IImageAttrs | {};\n"]},"metadata":{},"sourceType":"module"}