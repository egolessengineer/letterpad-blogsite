{"ast":null,"code":"import _regeneratorRuntime from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var getImageAttrs = function getImageAttrs(src, sizes, srcSizes) {\n  if (!src) return {};\n  if (!sizes) sizes = [480, 720, 960, 1200, 1440, 1600, 2000];\n  if (!srcSizes) srcSizes = \"(max-width: 720px) 100vw, 720px\";\n  var base64Url = makeCloudinaryUrl(src, 30);\n\n  if (src.startsWith(\"/\")) {\n    return {\n      src: src,\n      loading: \"lazy\"\n    };\n  }\n\n  var url = new URL(src);\n\n  if (url.hostname.includes(\"cloudinary\")) {\n    var srcSet = sizes.map(function (w) {\n      return makeCloudinaryImage(src, w);\n    }).join(\", \");\n    return {\n      src: makeCloudinaryUrl(src, sizes[sizes.length - 1]),\n      sizes: srcSizes,\n      \"data-srcset\": srcSet,\n      srcset: [base64Url],\n      width: \"100%\",\n      loading: \"lazy\",\n      \"class\": \"lazyload\"\n    };\n  }\n\n  if (url.hostname.includes(\"unsplash\")) {\n    base64Url = makeUnsplashUrl(src, 30);\n\n    var _srcSet = sizes.map(function (w) {\n      return makeUnsplashImage(src, w);\n    }).join(\", \");\n\n    return {\n      src: makeUnsplashUrl(src, sizes[sizes.length - 1]),\n      sizes: srcSizes,\n      \"data-srcset\": _srcSet,\n      srcset: [base64Url],\n      loading: \"lazy\",\n      \"class\": \"lazyload\"\n    };\n  }\n\n  return {\n    src: src,\n    loading: \"lazy\"\n  };\n};\nexport var setResponsiveImages = function setResponsiveImages(html, sizes) {\n  if (!sizes) sizes = [480, 720, 960, 1200, 1440, 1600, 2000];\n  var re = /<img\\s+[^>]*src=\"([^\"]*)\"[^>]*>/g;\n  var htmlWithResponsiveImages = html.replace(re, function (str, src) {\n    var attrs = getImageAttrs(src, sizes);\n\n    if (Object.keys(attrs).length > 0) {\n      var attrString = \"\";\n      Object.keys(attrs).forEach(function (key) {\n        attrString += \"\".concat(key, \"='\").concat(attrs[key], \"' \");\n      });\n      return str.replace(\"src=\\\"\".concat(src, \"\\\"\"), attrString);\n    }\n\n    return str;\n  });\n  return htmlWithResponsiveImages;\n};\nexport function makeCloudinaryImage(src, width) {\n  return \"\".concat(makeCloudinaryUrl(src, width), \" \").concat(width, \"w\");\n}\nexport function makeCloudinaryUrl(src, width) {\n  var replace = /image\\/upload\\/(.*)\\/blog-images/;\n  var url = src.replace(replace, \"image/upload/q_auto,f_auto,w_\".concat(width, \"/v1/blog-images\"));\n  return url;\n}\nexport function makeUnsplashImage(src, width) {\n  var extras = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  return \"\".concat(makeUnsplashUrl(src, width, extras), \" \").concat(width, \"w\");\n}\nexport function makeUnsplashUrl(src, width) {\n  var extras = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var url = new URL(src);\n  var baseUrl = \"\".concat(url.protocol, \"//\").concat(url.hostname).concat(url.pathname);\n  return \"\".concat(baseUrl, \"?w=\").concat(width, \"&auto=format&lossless=true\").concat(extras);\n}\nexport function makeBase64Url(_x) {\n  return _makeBase64Url.apply(this, arguments);\n}\n\nfunction _makeBase64Url() {\n  _makeBase64Url = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(requestURL) {\n    var response, arrayBuffer, b64;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(requestURL);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer();\n\n          case 5:\n            arrayBuffer = _context.sent;\n            b64 = arrayBuffer.toString(\"base64\");\n            return _context.abrupt(\"return\", \"data:\".concat(response.headers.get(\"content-type\"), \";base64,\").concat(b64));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _makeBase64Url.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/graphql/utils/imageAttributs.ts"],"names":["getImageAttrs","src","sizes","srcSizes","base64Url","makeCloudinaryUrl","startsWith","loading","url","URL","hostname","includes","srcSet","map","w","makeCloudinaryImage","join","length","srcset","width","makeUnsplashUrl","makeUnsplashImage","setResponsiveImages","html","re","htmlWithResponsiveImages","replace","str","attrs","Object","keys","attrString","forEach","key","extras","baseUrl","protocol","pathname","makeBase64Url","requestURL","fetch","response","buffer","arrayBuffer","b64","toString","headers","get"],"mappings":"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","sourcesContent":["import { IImageAttrsResult } from \"../types\";\n\nexport const getImageAttrs = (\n  src: string,\n  sizes?: number[],\n  srcSizes?: string,\n): IImageAttrsResult => {\n  if (!src) return {};\n  if (!sizes) sizes = [480, 720, 960, 1200, 1440, 1600, 2000];\n  if (!srcSizes) srcSizes = `(max-width: 720px) 100vw, 720px`;\n  let base64Url = makeCloudinaryUrl(src, 30);\n  if (src.startsWith(\"/\")) {\n    return {\n      src,\n      loading: \"lazy\",\n    };\n  }\n  const url = new URL(src);\n\n  if (url.hostname.includes(\"cloudinary\")) {\n    const srcSet = sizes.map(w => makeCloudinaryImage(src, w)).join(\", \");\n    return {\n      src: makeCloudinaryUrl(src, sizes[sizes.length - 1]),\n      sizes: srcSizes,\n      \"data-srcset\": srcSet,\n      srcset: [base64Url],\n      width: \"100%\",\n      loading: \"lazy\",\n      class: \"lazyload\",\n    };\n  }\n\n  if (url.hostname.includes(\"unsplash\")) {\n    base64Url = makeUnsplashUrl(src, 30);\n    const srcSet = sizes.map(w => makeUnsplashImage(src, w)).join(\", \");\n    return {\n      src: makeUnsplashUrl(src, sizes[sizes.length - 1]),\n      sizes: srcSizes,\n      \"data-srcset\": srcSet,\n      srcset: [base64Url],\n      loading: \"lazy\",\n      class: \"lazyload\",\n    };\n  }\n  return {\n    src,\n    loading: \"lazy\",\n  };\n};\n\nexport const setResponsiveImages = (html: string, sizes?: number[]) => {\n  if (!sizes) sizes = [480, 720, 960, 1200, 1440, 1600, 2000];\n\n  const re = /<img\\s+[^>]*src=\"([^\"]*)\"[^>]*>/g;\n  const htmlWithResponsiveImages = html.replace(re, (str, src) => {\n    const attrs = getImageAttrs(src, sizes);\n    if (Object.keys(attrs).length > 0) {\n      let attrString = \"\";\n      Object.keys(attrs).forEach(key => {\n        attrString += `${key}='${attrs[key]}' `;\n      });\n      return str.replace(`src=\"${src}\"`, attrString);\n    }\n    return str;\n  });\n\n  return htmlWithResponsiveImages;\n};\n\nexport function makeCloudinaryImage(src: string, width: number) {\n  return `${makeCloudinaryUrl(src, width)} ${width}w`;\n}\n\nexport function makeCloudinaryUrl(src, width) {\n  const replace = /image\\/upload\\/(.*)\\/blog-images/;\n  const url = src.replace(\n    replace,\n    `image/upload/q_auto,f_auto,w_${width}/v1/blog-images`,\n  );\n\n  return url;\n}\n\nexport function makeUnsplashImage(src: string, width: number, extras = \"\") {\n  return `${makeUnsplashUrl(src, width, extras)} ${width}w`;\n}\n\nexport function makeUnsplashUrl(src: string, width: number, extras = \"\") {\n  const url = new URL(src);\n  const baseUrl = `${url.protocol}//${url.hostname}${url.pathname}`;\n  return `${baseUrl}?w=${width}&auto=format&lossless=true${extras}`;\n}\n\nexport async function makeBase64Url(requestURL: string) {\n  const response = await fetch(requestURL);\n  //@ts-ignore\n  const arrayBuffer = await response.buffer();\n  const b64 = arrayBuffer.toString(\"base64\");\n  return `data:${response.headers.get(\"content-type\")};base64,${b64}`;\n}\n"]},"metadata":{},"sourceType":"module"}