{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/hoc/withAuth.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nconst withAuthCheck = WrappedComponent => {\n  const ComponentWithAuth = props => {\n    const [session, loading] = useSession();\n    const router = useRouter();\n    useEffect(() => {\n      var _session$user;\n\n      const _session = session;\n\n      if (!loading && !(_session !== null && _session !== void 0 && (_session$user = _session.user) !== null && _session$user !== void 0 && _session$user.id)) {\n        router.push(\"/api/auth/signin\");\n      }\n    }, [loading]);\n    if (!session) return null;\n    return __jsx(WrappedComponent, _extends({}, props, {\n      session: session.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  ComponentWithAuth.needsAuth = true;\n  ComponentWithAuth.layout = null;\n  return ComponentWithAuth;\n};\n\nexport default withAuthCheck;","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/hoc/withAuth.tsx"],"names":["useSession","useRouter","useEffect","withAuthCheck","WrappedComponent","ComponentWithAuth","props","session","loading","router","_session","user","id","push","needsAuth","layout"],"mappings":";;;;;;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,aAAa,GACjBC,gBADoB,IAEjB;AACH,QAAMC,iBAAiB,GAAIC,KAAD,IAAc;AACtC,UAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBR,UAAU,EAArC;AACA,UAAMS,MAAM,GAAGR,SAAS,EAAxB;AACAC,IAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,YAAMQ,QAAQ,GAAGH,OAAjB;;AACA,UAAI,CAACC,OAAD,IAAY,EAACE,QAAD,aAACA,QAAD,gCAACA,QAAQ,CAAEC,IAAX,0CAAC,cAAgBC,EAAjB,CAAhB,EAAqC;AACnCH,QAAAA,MAAM,CAACI,IAAP,CAAY,kBAAZ;AACD;AACF,KALQ,EAKN,CAACL,OAAD,CALM,CAAT;AAOA,QAAI,CAACD,OAAL,EAAc,OAAO,IAAP;AACd,WAAO,MAAC,gBAAD,eAAsBD,KAAtB;AAA6B,MAAA,OAAO,EAAEC,OAAO,CAACI,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAZD;;AAaAN,EAAAA,iBAAiB,CAACS,SAAlB,GAA8B,IAA9B;AACAT,EAAAA,iBAAiB,CAACU,MAAlB,GAA2B,IAA3B;AACA,SAAOV,iBAAP;AACD,CAnBD;;AAoBA,eAAeF,aAAf","sourcesContent":["import { SessionData } from \"@/graphql/types\";\nimport { useSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nconst withAuthCheck = <T extends object>(\n  WrappedComponent: React.ComponentType<T>,\n) => {\n  const ComponentWithAuth = (props: T) => {\n    const [session, loading] = useSession();\n    const router = useRouter();\n    useEffect(() => {\n      const _session = session as unknown as { user: SessionData };\n      if (!loading && !_session?.user?.id) {\n        router.push(\"/api/auth/signin\");\n      }\n    }, [loading]);\n\n    if (!session) return null;\n    return <WrappedComponent {...props} session={session.user} />;\n  };\n  ComponentWithAuth.needsAuth = true;\n  ComponentWithAuth.layout = null;\n  return ComponentWithAuth;\n};\nexport default withAuthCheck;\n"]},"metadata":{},"sourceType":"module"}