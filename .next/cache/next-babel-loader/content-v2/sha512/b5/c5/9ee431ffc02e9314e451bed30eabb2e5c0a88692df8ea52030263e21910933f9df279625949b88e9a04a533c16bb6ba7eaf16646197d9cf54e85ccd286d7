{"ast":null,"code":"import _slicedToArray from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/components/file-explorer/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Modal from \"antd/lib/modal/Modal\";\nimport { MediaProvider } from \"../../pages/post/[postId]\";\nimport Internal from \"./providers/Internal\";\nimport Unsplash from \"./providers/Unsplash\";\nimport { Button } from \"antd\";\nimport MediaItem from \"./MediaItem\";\nimport { useRef, useState } from \"react\";\nimport { uploadFile } from \"shared/upload\";\n\nvar FileExplorer = function FileExplorer(_ref) {\n  _s();\n\n  var isVisible = _ref.isVisible,\n      handleCancel = _ref.handleCancel,\n      _ref$multi = _ref.multi,\n      multi = _ref$multi === void 0 ? true : _ref$multi,\n      onInsert = _ref.onInsert;\n\n  var _useState = useState(MediaProvider.Letterpad),\n      mediaProvider = _useState[0],\n      setMediaProvider = _useState[1];\n\n  var hiddenInputRef = useRef(null);\n  var isUnsplash = mediaProvider === MediaProvider.Unsplash;\n  var isInternal = mediaProvider === MediaProvider.Letterpad;\n  var toggleProvider = isUnsplash ? MediaProvider.Letterpad : MediaProvider.Unsplash;\n\n  var _useState2 = useState({}),\n      selectedUrls = _useState2[0],\n      setSelection = _useState2[1];\n\n  var closeWindow = function closeWindow() {\n    setSelection({});\n    handleCancel();\n  };\n\n  var insertMedia = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return onInsert(selectedUrls);\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 7:\n              setTimeout(closeWindow, 0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function insertMedia() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onMediaSelected = function onMediaSelected(media) {\n    var urls = _objectSpread({}, selectedUrls);\n\n    if (urls[\"\".concat(media.url)]) {\n      delete urls[\"\".concat(media.url)];\n    } else {\n      urls[\"\".concat(media.url)] = {\n        src: media.url,\n        width: media.width || 0,\n        height: media.height || 0,\n        alt: media.description\n      };\n    }\n\n    if (!multi) {\n      urls[\"\".concat(media.url)] = {\n        src: media.url,\n        width: media.width || 0,\n        height: media.height || 0,\n        alt: media.description\n      };\n    }\n\n    setSelection(urls);\n  };\n\n  var renderer = function renderer(media) {\n    return media.map(function (item) {\n      return __jsx(MediaItem, {\n        key: item.id,\n        media: item,\n        isSelected: !!selectedUrls[item.url],\n        onMediaSelected: onMediaSelected,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      });\n    });\n  };\n\n  var hasSelectedImages = Object.keys(selectedUrls).length > 0;\n  if (!isVisible) return null;\n  return __jsx(Modal, {\n    centered: true,\n    width: \"60vw\",\n    title: \"Media\",\n    visible: isVisible,\n    onCancel: closeWindow,\n    footer: [__jsx(Button, {\n      key: \"back\",\n      onClick: closeWindow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Cancel\"), hasSelectedImages ? __jsx(Button, {\n      key: \"insert\",\n      onClick: insertMedia,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Insert\") : null, isInternal ? __jsx(Button, {\n      key: \"upload\",\n      onClick: function onClick() {\n        var _hiddenInputRef$curre;\n\n        (_hiddenInputRef$curre = hiddenInputRef.current) === null || _hiddenInputRef$curre === void 0 ? void 0 : _hiddenInputRef$curre.click();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Browse\") : null, __jsx(Button, {\n      type: \"primary\",\n      onClick: function onClick() {\n        setSelection({});\n        setMediaProvider(toggleProvider);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, isUnsplash ? \"My Media\" : \"Search Online\")],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, isInternal && __jsx(Internal, {\n    renderer: renderer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 22\n    }\n  }), isUnsplash && __jsx(Unsplash, {\n    renderer: renderer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 22\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    ref: hiddenInputRef,\n    style: {\n      display: \"none\"\n    },\n    onChange: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var _yield$uploadFile, _yield$uploadFile2, result, urls;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (e.target.files) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.next = 4;\n                return uploadFile({\n                  files: e.target.files,\n                  type: \"cover_image\"\n                });\n\n              case 4:\n                _yield$uploadFile = _context2.sent;\n                _yield$uploadFile2 = _slicedToArray(_yield$uploadFile, 1);\n                result = _yield$uploadFile2[0];\n                urls = _objectSpread({}, selectedUrls);\n                urls[\"\".concat(result.src)] = _objectSpread(_objectSpread({}, result), {}, {\n                  alt: \"\"\n                });\n                onInsert(urls);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(FileExplorer, \"lY3lSI8ITxfrY1xBLdlVqQh9NH8=\");\n\n_c = FileExplorer;\nexport default FileExplorer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/components/file-explorer/index.tsx"],"names":["Modal","MediaProvider","Internal","Unsplash","Button","MediaItem","useRef","useState","uploadFile","FileExplorer","isVisible","handleCancel","multi","onInsert","Letterpad","mediaProvider","setMediaProvider","hiddenInputRef","isUnsplash","isInternal","toggleProvider","selectedUrls","setSelection","closeWindow","insertMedia","setTimeout","onMediaSelected","media","urls","url","src","width","height","alt","description","renderer","map","item","id","hasSelectedImages","Object","keys","length","current","click","display","e","target","files","type","result"],"mappings":"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","sourcesContent":["import Modal from \"antd/lib/modal/Modal\";\nimport { MediaProvider } from \"../../pages/post/[postId]\";\nimport Internal from \"./providers/Internal\";\nimport Unsplash from \"./providers/Unsplash\";\nimport { Image, Media } from \"@/__generated__/type-defs.graphqls\";\nimport { Button } from \"antd\";\nimport MediaItem from \"./MediaItem\";\nimport { useRef, useState } from \"react\";\nimport { uploadFile } from \"shared/upload\";\n\ntype ImageInput = {\n  [urls: string]: Image & { alt: string };\n};\n\ninterface IProps {\n  isVisible: boolean;\n  handleCancel: () => void;\n  multi?: boolean;\n  onInsert: (images: ImageInput) => Promise<unknown[]>;\n  onImageFile?: (image: File[]) => Promise<string[]>;\n}\nconst FileExplorer = ({\n  isVisible,\n  handleCancel,\n  multi = true,\n  onInsert,\n}: IProps) => {\n  const [mediaProvider, setMediaProvider] = useState<MediaProvider>(\n    MediaProvider.Letterpad,\n  );\n  const hiddenInputRef = useRef<HTMLInputElement>(null);\n  const isUnsplash = mediaProvider === MediaProvider.Unsplash;\n  const isInternal = mediaProvider === MediaProvider.Letterpad;\n\n  const toggleProvider = isUnsplash\n    ? MediaProvider.Letterpad\n    : MediaProvider.Unsplash;\n\n  const [selectedUrls, setSelection] = useState<ImageInput>({});\n\n  const closeWindow = () => {\n    setSelection({});\n    handleCancel();\n  };\n\n  const insertMedia = async () => {\n    // get only the urls in an array\n    try {\n      await onInsert(selectedUrls);\n    } catch (e) {\n      // notify.show(\"Something unexpected happened.\", \"error\");\n    }\n    setTimeout(closeWindow, 0);\n  };\n\n  const onMediaSelected = (media: Media) => {\n    let urls = { ...selectedUrls };\n    if (urls[`${media.url}`]) {\n      delete urls[`${media.url}`];\n    } else {\n      urls[`${media.url}`] = {\n        src: media.url,\n        width: media.width || 0,\n        height: media.height || 0,\n        alt: media.description,\n      };\n    }\n    if (!multi) {\n      urls[`${media.url}`] = {\n        src: media.url,\n        width: media.width || 0,\n        height: media.height || 0,\n        alt: media.description,\n      };\n    }\n    setSelection(urls);\n  };\n\n  const renderer = (media: Media[]) => {\n    return media.map(item => (\n      <MediaItem\n        key={item.id}\n        media={item}\n        isSelected={!!selectedUrls[item.url]}\n        onMediaSelected={onMediaSelected}\n      />\n    ));\n  };\n  const hasSelectedImages = Object.keys(selectedUrls).length > 0;\n  if (!isVisible) return null;\n  return (\n    <Modal\n      centered\n      width=\"60vw\"\n      title=\"Media\"\n      visible={isVisible}\n      onCancel={closeWindow}\n      footer={[\n        <Button key=\"back\" onClick={closeWindow}>\n          Cancel\n        </Button>,\n        hasSelectedImages ? (\n          <Button key=\"insert\" onClick={insertMedia}>\n            Insert\n          </Button>\n        ) : null,\n        isInternal ? (\n          <Button\n            key=\"upload\"\n            onClick={() => {\n              hiddenInputRef.current?.click();\n            }}\n          >\n            Browse\n          </Button>\n        ) : null,\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setSelection({});\n            setMediaProvider(toggleProvider);\n          }}\n        >\n          {isUnsplash ? \"My Media\" : \"Search Online\"}\n        </Button>,\n      ]}\n    >\n      {isInternal && <Internal renderer={renderer} />}\n      {isUnsplash && <Unsplash renderer={renderer} />}\n      <input\n        type=\"file\"\n        ref={hiddenInputRef}\n        style={{ display: \"none\" }}\n        onChange={async e => {\n          if (!e.target.files) return;\n          const [result] = await uploadFile({\n            files: e.target.files,\n            type: \"cover_image\",\n          });\n          let urls = { ...selectedUrls };\n          urls[`${result.src}`] = { ...result, alt: \"\" };\n          onInsert(urls);\n        }}\n      />\n    </Modal>\n  );\n};\n\nexport default FileExplorer;\n"]},"metadata":{},"sourceType":"module"}