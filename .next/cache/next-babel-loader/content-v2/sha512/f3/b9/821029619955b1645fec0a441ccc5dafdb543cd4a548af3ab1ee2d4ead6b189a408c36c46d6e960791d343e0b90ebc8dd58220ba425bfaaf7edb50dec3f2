{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/pages/tags.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Table, Button, Popconfirm, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { useEffect, useState } from \"react\";\nimport { UpdateTagsDocument, DeleteTagsDocument } from \"@/__generated__/queries/mutations.graphql\";\nimport { EditableCell, EditableRow } from \"@/components/ediitable-table\";\nimport { initializeApollo } from \"@/graphql/apollo\";\nimport { TagsDocument } from \"@/graphql/queries/queries.graphql\";\nimport CustomLayout from \"@/components/layouts/Layout\";\nimport withAuthCheck from \"../hoc/withAuth\";\nimport Head from \"next/head\";\n\nconst EditableTable = () => {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  useEffect(() => {\n    fetchTags().then(response => {\n      if (!response.props.error) {\n        setDataSource(response.props.data.map(item => _objectSpread(_objectSpread({}, item), {}, {\n          key: item.id,\n          posts: item.posts,\n          desc: item.desc || \"\"\n        })));\n        setCount(response.props.data.length + 1);\n      }\n    });\n  }, []);\n\n  const handleDelete = async key => {\n    const tagToDelete = [...dataSource].filter(item => item.key === key);\n\n    if (tagToDelete.length > 0 && tagToDelete[0].id > 0) {\n      await deleteTagApi(tagToDelete[0].id);\n    }\n\n    setDataSource([...dataSource].filter(item => item.key !== key));\n  };\n\n  const headers = getHeaders(dataSource, handleDelete);\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell\n    }\n  };\n  const columns = headers.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: record => ({\n        record,\n        editable: col.editable,\n        required: col.required,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave: handleSave\n      })\n    });\n  });\n\n  const handleAdd = () => {\n    const newData = {\n      key: count + 1,\n      name: `new-tag-${count}`,\n      id: 0,\n      desc: \"\",\n      posts: 0,\n      slug: `new-tag-${count}`\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n\n  const handleSave = async row => {\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n    const {\n      name,\n      id,\n      desc,\n      slug\n    } = row;\n    const client = await initializeApollo();\n    await client.mutate({\n      mutation: UpdateTagsDocument,\n      variables: {\n        data: {\n          name,\n          id,\n          desc,\n          slug\n        }\n      }\n    });\n    setDataSource(newData);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Tags\")), __jsx(PageHeader, {\n    className: \"site-page-header\",\n    title: \"Tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleAdd,\n    type: \"primary\",\n    style: {\n      marginBottom: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Add a row\"), __jsx(Table, {\n    components: components,\n    rowClassName: () => \"editable-row\",\n    bordered: true,\n    dataSource: dataSource,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst EditableTableWithAuth = withAuthCheck(EditableTable);\nEditableTableWithAuth.layout = CustomLayout;\nexport default EditableTableWithAuth;\nexport async function fetchTags() {\n  var _tags$data$tags;\n\n  const apolloClient = await initializeApollo();\n  const tags = await apolloClient.query({\n    query: TagsDocument\n  });\n\n  if (((_tags$data$tags = tags.data.tags) === null || _tags$data$tags === void 0 ? void 0 : _tags$data$tags.__typename) === \"TagsNode\") {\n    const data = tags.data.tags.rows.map(item => {\n      var _item$posts;\n\n      const count = ((_item$posts = item.posts) === null || _item$posts === void 0 ? void 0 : _item$posts.__typename) === \"PostsNode\" ? item.posts.count : 0;\n      return _objectSpread(_objectSpread({}, item), {}, {\n        posts: count\n      });\n    });\n    return {\n      props: {\n        data,\n        error: \"\"\n      }\n    };\n  } else {\n    var _tags$data$tags2;\n\n    return {\n      props: {\n        data: [],\n        error: ((_tags$data$tags2 = tags.data.tags) === null || _tags$data$tags2 === void 0 ? void 0 : _tags$data$tags2.__typename) === \"TagsError\" ? tags.data.tags.message : \"\"\n      }\n    };\n  }\n}\n\nasync function deleteTagApi(id) {\n  var _tags$data;\n\n  const apolloClient = await initializeApollo();\n  const tags = await apolloClient.mutate({\n    mutation: DeleteTagsDocument,\n    variables: {\n      id\n    }\n  });\n  return (_tags$data = tags.data) === null || _tags$data === void 0 ? void 0 : _tags$data.deleteTags;\n}\n\nfunction getHeaders(dataSource, handleDelete) {\n  return [{\n    title: \"name\",\n    dataIndex: \"name\",\n    width: \"30%\",\n    editable: true,\n    required: true\n  }, {\n    title: \"desc\",\n    dataIndex: \"desc\",\n    editable: true,\n    required: false,\n    render: (_, _record) => {\n      return _ || __jsx(Button, {\n        type: \"dashed\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, \"Edit\");\n    }\n  }, {\n    title: \"posts\",\n    dataIndex: \"posts\"\n  }, {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    render: (_, record) => dataSource.length >= 1 ? __jsx(Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => handleDelete(record.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, \"Delete\")) : null\n  }];\n}","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/pages/tags.tsx"],"names":["Table","Button","Popconfirm","PageHeader","Content","useEffect","useState","UpdateTagsDocument","DeleteTagsDocument","EditableCell","EditableRow","initializeApollo","TagsDocument","CustomLayout","withAuthCheck","Head","EditableTable","dataSource","setDataSource","count","setCount","fetchTags","then","response","props","error","data","map","item","key","id","posts","desc","length","handleDelete","tagToDelete","filter","deleteTagApi","headers","getHeaders","components","body","row","cell","columns","col","editable","onCell","record","required","dataIndex","title","handleSave","handleAdd","newData","name","slug","index","findIndex","splice","client","mutate","mutation","variables","padding","marginBottom","EditableTableWithAuth","layout","apolloClient","tags","query","__typename","rows","message","deleteTags","width","render","_","_record"],"mappings":"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","sourcesContent":["import { Table, Button, Popconfirm, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { useEffect, useState } from \"react\";\nimport {\n  UpdateTagsMutationVariables,\n  UpdateTagsMutation,\n  UpdateTagsDocument,\n  DeleteTagsMutation,\n  DeleteTagsMutationVariables,\n  DeleteTagsDocument,\n} from \"@/__generated__/queries/mutations.graphql\";\nimport {\n  TagsQuery,\n  TagsQueryVariables,\n} from \"@/__generated__/queries/queries.graphql\";\nimport { EditableCell, EditableRow } from \"@/components/ediitable-table\";\nimport { initializeApollo } from \"@/graphql/apollo\";\nimport { TagsDocument } from \"@/graphql/queries/queries.graphql\";\nimport CustomLayout from \"@/components/layouts/Layout\";\nimport withAuthCheck from \"../hoc/withAuth\";\nimport Head from \"next/head\";\n\ntype EditableTableProps = Parameters<typeof Table>[0];\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  id: number;\n  desc: string;\n  slug: string;\n  posts: number;\n}\n\ntype ColumnTypes = Exclude<EditableTableProps[\"columns\"], undefined>;\n\nconst EditableTable = () => {\n  const [dataSource, setDataSource] = useState<DataType[]>([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    fetchTags().then(response => {\n      if (!response.props.error) {\n        setDataSource(\n          response.props.data.map(item => ({\n            ...item,\n            key: item.id,\n            posts: item.posts,\n            desc: item.desc || \"\",\n          })),\n        );\n        setCount(response.props.data.length + 1);\n      }\n    });\n  }, []);\n\n  const handleDelete = async (key: React.Key) => {\n    const tagToDelete = [...dataSource].filter(item => item.key === key);\n    if (tagToDelete.length > 0 && tagToDelete[0].id > 0) {\n      await deleteTagApi(tagToDelete[0].id);\n    }\n    setDataSource([...dataSource].filter(item => item.key !== key));\n  };\n\n  const headers = getHeaders(dataSource, handleDelete);\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columns = headers.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: DataType) => ({\n        record,\n        editable: col.editable,\n        required: col.required,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave: handleSave,\n      }),\n    };\n  });\n\n  const handleAdd = () => {\n    const newData: DataType = {\n      key: count + 1,\n      name: `new-tag-${count}`,\n      id: 0,\n      desc: \"\",\n      posts: 0,\n      slug: `new-tag-${count}`,\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n\n  const handleSave = async (row: DataType) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n\n    const { name, id, desc, slug } = row;\n    const client = await initializeApollo();\n    await client.mutate<UpdateTagsMutation, UpdateTagsMutationVariables>({\n      mutation: UpdateTagsDocument,\n      variables: {\n        data: { name, id, desc, slug },\n      },\n    });\n    setDataSource(newData);\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Tags</title>\n      </Head>\n      <PageHeader className=\"site-page-header\" title=\"Tags\"></PageHeader>\n      <Content>\n        <div className=\"site-layout-background\" style={{ padding: 16 }}>\n          <Button\n            onClick={handleAdd}\n            type=\"primary\"\n            style={{ marginBottom: 16 }}\n          >\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => \"editable-row\"}\n            bordered\n            dataSource={dataSource}\n            columns={columns as ColumnTypes}\n          />\n        </div>\n      </Content>\n    </>\n  );\n};\n\nconst EditableTableWithAuth = withAuthCheck(EditableTable);\nEditableTableWithAuth.layout = CustomLayout;\nexport default EditableTableWithAuth;\n\nexport async function fetchTags() {\n  const apolloClient = await initializeApollo();\n\n  const tags = await apolloClient.query<TagsQuery, TagsQueryVariables>({\n    query: TagsDocument,\n  });\n  if (tags.data.tags?.__typename === \"TagsNode\") {\n    const data = tags.data.tags.rows.map(item => {\n      const count =\n        item.posts?.__typename === \"PostsNode\" ? item.posts.count : 0;\n      return { ...item, posts: count };\n    });\n    return {\n      props: {\n        data,\n        error: \"\",\n      },\n    };\n  } else {\n    return {\n      props: {\n        data: [],\n        error:\n          tags.data.tags?.__typename === \"TagsError\"\n            ? tags.data.tags.message\n            : \"\",\n      },\n    };\n  }\n}\n\nasync function deleteTagApi(id) {\n  const apolloClient = await initializeApollo();\n\n  const tags = await apolloClient.mutate<\n    DeleteTagsMutation,\n    DeleteTagsMutationVariables\n  >({\n    mutation: DeleteTagsDocument,\n    variables: {\n      id,\n    },\n  });\n\n  return tags.data?.deleteTags;\n}\n\nfunction getHeaders(dataSource, handleDelete) {\n  return [\n    {\n      title: \"name\",\n      dataIndex: \"name\",\n      width: \"30%\",\n      editable: true,\n      required: true,\n    },\n    {\n      title: \"desc\",\n      dataIndex: \"desc\",\n      editable: true,\n      required: false,\n      render: (_, _record: { key: React.Key }) => {\n        return (\n          _ || (\n            <Button type=\"dashed\" size=\"small\">\n              Edit\n            </Button>\n          )\n        );\n      },\n    },\n    {\n      title: \"posts\",\n      dataIndex: \"posts\",\n    },\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_, record: { key: React.Key }) =>\n        dataSource.length >= 1 ? (\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => handleDelete(record.key)}\n          >\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null,\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}