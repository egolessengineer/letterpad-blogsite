{"ast":null,"code":"import _toConsumableArray from \"/Users/abhi/www/letterpad-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/abhi/www/letterpad-admin/src/components/post-meta/tags.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Input, Tag } from \"antd\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nvar Tags = function Tags(_ref) {\n  _s();\n\n  var _post$tags;\n\n  var post = _ref.post,\n      setPostAttribute = _ref.setPostAttribute;\n\n  var _useState = useState(false),\n      inputVisible = _useState[0],\n      setInputVisible = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  if (post.__typename !== \"Post\") return null;\n\n  var handleInputConfirm = function handleInputConfirm() {\n    setInputVisible(false);\n\n    if (inputValue && post.tags) {\n      var tags = post.tags.map(function (tag) {\n        var id = tag.id,\n            slug = tag.slug,\n            name = tag.name,\n            desc = tag.desc;\n        return {\n          id: id,\n          slug: slug,\n          name: name,\n          desc: desc || \"\"\n        };\n      });\n      setPostAttribute({\n        tags: [].concat(_toConsumableArray(tags), [{\n          id: 0,\n          name: inputValue,\n          slug: inputValue,\n          desc: \"\"\n        }])\n      });\n      setInputValue(\"\");\n    }\n  };\n\n  var tagInputRef = function tagInputRef(ref) {\n    if (ref) {\n      ref.input.focus();\n    }\n  };\n\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Tags\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), (_post$tags = post.tags) === null || _post$tags === void 0 ? void 0 : _post$tags.map(function (tag) {\n    return __jsx(Tag, {\n      key: tag.name,\n      closable: true,\n      onClose: function onClose() {\n        if (!post.tags) return;\n        var tags = post.tags.filter(function (ele) {\n          return ele.name !== tag.name;\n        }).map(function (tag) {\n          var id = tag.id,\n              slug = tag.slug,\n              name = tag.name,\n              desc = tag.desc;\n          return {\n            id: id,\n            slug: slug,\n            name: name,\n            desc: desc || \"\"\n          };\n        });\n        setPostAttribute({\n          tags: tags\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, tag.name);\n  }), inputVisible && __jsx(Input, {\n    type: \"text\",\n    size: \"small\",\n    className: \"tag-input\",\n    value: inputValue,\n    onChange: function onChange(e) {\n      return setInputValue(e.target.value);\n    },\n    onBlur: handleInputConfirm,\n    onPressEnter: handleInputConfirm,\n    ref: tagInputRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), !inputVisible && __jsx(Tag, {\n    className: \"site-tag-plus\",\n    onClick: function onClick() {\n      setInputVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(PlusOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), \" New Tag\"));\n};\n\n_s(Tags, \"pZMCUGFgufvsW0LX55tvln+2YdU=\");\n\n_c = Tags;\nexport default Tags;\nvar Wrapper = styled.div.withConfig({\n  displayName: \"tags__Wrapper\"\n})([\".site-tag-plus{border-style:dashed;}.edit-tag{user-select:none;}.tag-input{width:78px;margin-right:8px;vertical-align:top;}\"]);\n_c2 = Wrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tags\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/components/post-meta/tags.tsx"],"names":["PlusOutlined","Input","Tag","useState","styled","Tags","post","setPostAttribute","inputVisible","setInputVisible","inputValue","setInputValue","__typename","handleInputConfirm","tags","map","tag","id","slug","name","desc","tagInputRef","ref","input","focus","filter","ele","e","target","value","Wrapper","div"],"mappings":"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","sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\nimport { Input, Tag } from \"antd\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PostQuery } from \"@/__generated__/queries/queries.graphql\";\nimport { InputUpdatePost } from \"@/__generated__/type-defs.graphqls\";\n\ninterface IProps {\n  post: PostQuery[\"post\"];\n  setPostAttribute: (attrs: Omit<InputUpdatePost, \"id\">) => void;\n}\n\nconst Tags = ({ post, setPostAttribute }: IProps) => {\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  if (post.__typename !== \"Post\") return null;\n\n  const handleInputConfirm = () => {\n    setInputVisible(false);\n    if (inputValue && post.tags) {\n      const tags = post.tags.map(tag => {\n        const { id, slug, name, desc } = tag;\n        return { id, slug, name, desc: desc || \"\" };\n      });\n      setPostAttribute({\n        tags: [\n          ...tags,\n          { id: 0, name: inputValue, slug: inputValue, desc: \"\" },\n        ],\n      });\n      setInputValue(\"\");\n    }\n  };\n\n  const tagInputRef = ref => {\n    if (ref) {\n      ref.input.focus();\n    }\n  };\n\n  return (\n    <Wrapper>\n      <label>Tags</label>\n      <br />\n      {post.tags?.map(tag => (\n        <Tag\n          key={tag.name}\n          closable\n          onClose={() => {\n            if (!post.tags) return;\n            const tags = post.tags\n              .filter(ele => ele.name !== tag.name)\n              .map(tag => {\n                const { id, slug, name, desc } = tag;\n                return { id, slug, name, desc: desc || \"\" };\n              });\n            setPostAttribute({ tags });\n          }}\n        >\n          {tag.name}\n        </Tag>\n      ))}\n      {inputVisible && (\n        <Input\n          type=\"text\"\n          size=\"small\"\n          className=\"tag-input\"\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n          ref={tagInputRef}\n        />\n      )}\n      {!inputVisible && (\n        <Tag\n          className=\"site-tag-plus\"\n          onClick={() => {\n            setInputVisible(true);\n          }}\n        >\n          <PlusOutlined /> New Tag\n        </Tag>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Tags;\n\nconst Wrapper = styled.div`\n  .site-tag-plus {\n    border-style: dashed;\n  }\n  .edit-tag {\n    user-select: none;\n  }\n  .tag-input {\n    width: 78px;\n    margin-right: 8px;\n    vertical-align: top;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}