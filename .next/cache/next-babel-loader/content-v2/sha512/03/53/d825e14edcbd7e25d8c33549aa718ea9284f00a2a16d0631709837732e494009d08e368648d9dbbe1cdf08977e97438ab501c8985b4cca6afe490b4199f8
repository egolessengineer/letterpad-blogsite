{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Permission } from \"./permission\";\nimport { DataTypes, Model } from \"sequelize\";\nimport restoreSequelizeAttributesOnClass from \"./_tooling\";\nexport class Role extends Model {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"createdAt\", void 0);\n\n    _defineProperty(this, \"updatedAt\", void 0);\n\n    _defineProperty(this, \"getPermissions\", void 0);\n\n    _defineProperty(this, \"addPermission\", void 0);\n\n    restoreSequelizeAttributesOnClass(new.target, this, [\"getPermissions\", \"addPermission\"]);\n  }\n\n}\nexport default function initRole(sequelize) {\n  Role.init({\n    id: {\n      type: DataTypes.INTEGER,\n      autoIncrement: true,\n      primaryKey: true\n    },\n    name: {\n      type: DataTypes.STRING\n    }\n  }, {\n    tableName: \"roles\",\n    sequelize // passing the `sequelize` instance is required\n\n  });\n  return Role;\n}\nexport function associateRole() {\n  Role.belongsToMany(Permission, {\n    through: \"rolePermissions\",\n    foreignKey: \"role_id\"\n  });\n}","map":{"version":3,"sources":["/Users/abhi/www/letterpad-admin/src/graphql/db/models/role.ts"],"names":["Permission","DataTypes","Model","restoreSequelizeAttributesOnClass","Role","constructor","args","new","target","initRole","sequelize","init","id","type","INTEGER","autoIncrement","primaryKey","name","STRING","tableName","associateRole","belongsToMany","through","foreignKey"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SACEC,SADF,EAIEC,KAJF,QAMO,WANP;AAOA,OAAOC,iCAAP,MAA8C,YAA9C;AAUA,OAAO,MAAMC,IAAN,SACGF,KADH,CAGP;AAaEG,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;;AADmB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEnBH,IAAAA,iCAAiC,CAACI,GAAG,CAACC,MAAL,EAAa,IAAb,EAAmB,CAClD,gBADkD,EAElD,eAFkD,CAAnB,CAAjC;AAID;;AAnBH;AAsBA,eAAe,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC1CN,EAAAA,IAAI,CAACO,IAAL,CACE;AACEC,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAEZ,SAAS,CAACa,OADd;AAEFC,MAAAA,aAAa,EAAE,IAFb;AAGFC,MAAAA,UAAU,EAAE;AAHV,KADN;AAMEC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,IAAI,EAAEZ,SAAS,CAACiB;AADZ;AANR,GADF,EAWE;AACEC,IAAAA,SAAS,EAAE,OADb;AAEET,IAAAA,SAFF,CAEa;;AAFb,GAXF;AAiBA,SAAON,IAAP;AACD;AAED,OAAO,SAASgB,aAAT,GAA+B;AACpChB,EAAAA,IAAI,CAACiB,aAAL,CAAmBrB,UAAnB,EAA+B;AAC7BsB,IAAAA,OAAO,EAAE,iBADoB;AAE7BC,IAAAA,UAAU,EAAE;AAFiB,GAA/B;AAID","sourcesContent":["import { Permission } from \"./permission\";\nimport {\n  DataTypes,\n  HasManyAddAssociationMixin,\n  HasManyGetAssociationsMixin,\n  Model,\n  Optional,\n} from \"sequelize\";\nimport restoreSequelizeAttributesOnClass from \"./_tooling\";\n\nexport interface RoleAttributes {\n  id: number;\n  name: string;\n}\n\nexport interface RoleCreationAttributes\n  extends Optional<RoleAttributes, \"id\"> {}\n\nexport class Role\n  extends Model<RoleAttributes, RoleCreationAttributes>\n  implements RoleAttributes\n{\n  public id!: number;\n  public name!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public getPermissions!: HasManyGetAssociationsMixin<Permission>;\n  public addPermission!: HasManyAddAssociationMixin<\n    Permission,\n    Permission[\"id\"]\n  >;\n\n  constructor(...args) {\n    super(...args);\n    restoreSequelizeAttributesOnClass(new.target, this, [\n      \"getPermissions\",\n      \"addPermission\",\n    ]);\n  }\n}\n\nexport default function initRole(sequelize) {\n  Role.init(\n    {\n      id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true,\n      },\n      name: {\n        type: DataTypes.STRING,\n      },\n    },\n    {\n      tableName: \"roles\",\n      sequelize, // passing the `sequelize` instance is required\n    },\n  );\n\n  return Role;\n}\n\nexport function associateRole(): void {\n  Role.belongsToMany(Permission, {\n    through: \"rolePermissions\",\n    foreignKey: \"role_id\",\n  });\n}\n"]},"metadata":{},"sourceType":"module"}